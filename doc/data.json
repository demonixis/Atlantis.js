{
    "project": {
        "name": "AtlantisEngine.js",
        "description": "A lightweight 2D game engine in JavaScript using Canvas 2D",
        "version": "0.0.2",
        "url": "http://blog.demonixis.net"
    },
    "files": {
        "Engine\\Graphics\\Animation.js": {
            "name": "Engine\\Graphics\\Animation.js",
            "modules": {
                "Engine": 1
            },
            "classes": {
                "Atlantis.SpriteAnimation": 1,
                "Atlantis.SpriteAnimator": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\Camera2D.js": {
            "name": "Engine\\Graphics\\Camera2D.js",
            "modules": {},
            "classes": {
                "Atlantis.Camera2D": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\Sprite.js": {
            "name": "Engine\\Graphics\\Sprite.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\SpriteGroup.js": {
            "name": "Engine\\Graphics\\SpriteGroup.js",
            "modules": {},
            "classes": {
                "Atlantis.SpriteGroup": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\Tilemap.js": {
            "name": "Engine\\Graphics\\Tilemap.js",
            "modules": {},
            "classes": {
                "Atlantis.TilemapLayerType": 1,
                "Atlantis.TilemapProjection": 1,
                "Atlantis.Tileset": 1,
                "Atlantis.TilemapLayer": 1,
                "Atlantis.Tilemap": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\TmxLoader.js": {
            "name": "Engine\\Graphics\\TmxLoader.js",
            "modules": {},
            "classes": {
                "Atlantis.TmxLoader": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Input\\KeyboardComponent.js": {
            "name": "Engine\\Input\\KeyboardComponent.js",
            "modules": {},
            "classes": {
                "Atlantis.KeyboardComponent": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\AudioManager.js": {
            "name": "Engine\\AudioManager.js",
            "modules": {},
            "classes": {
                "Atlantis.MusicState": 1,
                "Atlantis.AudioManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\GameApplication.js": {
            "name": "Engine\\GameApplication.js",
            "modules": {},
            "classes": {
                "Atlantis.app": 1,
                "Atlantis.input": 1,
                "Atlantis.screen": 1,
                "Atlantis.Engine": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Level.js": {
            "name": "Engine\\Level.js",
            "modules": {},
            "classes": {
                "Atlantis.Level": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\LevelManager.js": {
            "name": "Engine\\LevelManager.js",
            "modules": {},
            "classes": {
                "Atlantis.LevelManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Random.js": {
            "name": "Engine\\Random.js",
            "modules": {},
            "classes": {
                "Atlantis.Random": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\StorageManager.js": {
            "name": "Engine\\StorageManager.js",
            "modules": {},
            "classes": {
                "Atlantis.StorageManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Graphics\\GraphicsDevice.js": {
            "name": "Framework\\Graphics\\GraphicsDevice.js",
            "modules": {
                "Framework": 1
            },
            "classes": {
                "Atlantis.GraphicsDevice": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Graphics\\RenderTarget.js": {
            "name": "Framework\\Graphics\\RenderTarget.js",
            "modules": {},
            "classes": {
                "Atlantis.RenderTarget": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Graphics\\SpriteBatch.js": {
            "name": "Framework\\Graphics\\SpriteBatch.js",
            "modules": {},
            "classes": {
                "Atlantis.SpriteSortMode": 1,
                "Atlantis.SpriteEffect": 1,
                "Atlantis.SpriteBatch": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Graphics\\SpriteFont.js": {
            "name": "Framework\\Graphics\\SpriteFont.js",
            "modules": {},
            "classes": {
                "Atlantis.SpriteFont": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Input\\Gamepad.js": {
            "name": "Framework\\Input\\Gamepad.js",
            "modules": {},
            "classes": {
                "Atlantis.GamepadButton": 1,
                "Atlantis.GamepadAxis": 1,
                "Atlantis.GamepadState": 1,
                "Atlantis.Gamepad": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Input\\Keyboard.js": {
            "name": "Framework\\Input\\Keyboard.js",
            "modules": {},
            "classes": {
                "Atlantis.KeyboardState": 1,
                "Atlantis.KeyboardManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Input\\Keys.js": {
            "name": "Framework\\Input\\Keys.js",
            "modules": {},
            "classes": {
                "Atlantis.Keys": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Input\\Mouse.js": {
            "name": "Framework\\Input\\Mouse.js",
            "modules": {},
            "classes": {
                "Atlantis.ButtonState": 1,
                "Atlantis.MouseState": 1,
                "Atlantis.Mouse": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Input\\TouchPanel.js": {
            "name": "Framework\\Input\\TouchPanel.js",
            "modules": {},
            "classes": {
                "Atlantis.TouchLocationState": 1,
                "Atlantis.TouchPanelState": 1,
                "Atlantis.TouchPanel": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Common.js": {
            "name": "Framework\\Common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Compatibility.js": {
            "name": "Framework\\Compatibility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\ContentManager.js": {
            "name": "Framework\\ContentManager.js",
            "modules": {},
            "classes": {
                "Atlantis.ContentManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Game.js": {
            "name": "Framework\\Game.js",
            "modules": {},
            "classes": {
                "Atlantis.Game": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\GameComponent.js": {
            "name": "Framework\\GameComponent.js",
            "modules": {},
            "classes": {
                "Atlantis.GameComponent": 1,
                "Atlantis.DrawableGameComponent": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\GameTime.js": {
            "name": "Framework\\GameTime.js",
            "modules": {},
            "classes": {
                "Atlantis.GameTime": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\MathHelper.js": {
            "name": "Framework\\MathHelper.js",
            "modules": {},
            "classes": {
                "Atlantis.MathHelpers": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Matrix.js": {
            "name": "Framework\\Matrix.js",
            "modules": {},
            "classes": {
                "Atlantis.Matrix": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Preloader.js": {
            "name": "Framework\\Preloader.js",
            "modules": {},
            "classes": {
                "Atlantis.Preloader": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Quaternion.js": {
            "name": "Framework\\Quaternion.js",
            "modules": {},
            "classes": {
                "Atlantis.Quaternion": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Rectangle.js": {
            "name": "Framework\\Rectangle.js",
            "modules": {},
            "classes": {
                "Atlantis.Rectangle": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Vector2.js": {
            "name": "Framework\\Vector2.js",
            "modules": {},
            "classes": {
                "Atlantis.Point": 1,
                "Atlantis.Vector2": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Vector3.js": {
            "name": "Framework\\Vector3.js",
            "modules": {},
            "classes": {
                "Atlantis.Vector3": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Vector4.js": {
            "name": "Framework\\Vector4.js",
            "modules": {},
            "classes": {
                "Atlantis.Vector4": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        }
    },
    "modules": {
        "Atlantis": {
            "name": "Atlantis",
            "submodules": {
                "Engine": 1,
                "Framework": 1
            },
            "classes": {
                "Atlantis.SpriteAnimation": 1,
                "Atlantis.SpriteAnimator": 1,
                "Atlantis.Camera2D": 1,
                "Atlantis.SpriteGroup": 1,
                "Atlantis.TilemapLayerType": 1,
                "Atlantis.TilemapProjection": 1,
                "Atlantis.Tileset": 1,
                "Atlantis.TilemapLayer": 1,
                "Atlantis.Tilemap": 1,
                "Atlantis.TmxLoader": 1,
                "Atlantis.KeyboardComponent": 1,
                "Atlantis.MusicState": 1,
                "Atlantis.AudioManager": 1,
                "Atlantis.app": 1,
                "Atlantis.input": 1,
                "Atlantis.screen": 1,
                "Atlantis.Engine": 1,
                "Atlantis.Level": 1,
                "Atlantis.LevelManager": 1,
                "Atlantis.Random": 1,
                "Atlantis.StorageManager": 1,
                "Atlantis.GraphicsDevice": 1,
                "Atlantis.RenderTarget": 1,
                "Atlantis.SpriteSortMode": 1,
                "Atlantis.SpriteEffect": 1,
                "Atlantis.SpriteBatch": 1,
                "Atlantis.SpriteFont": 1,
                "Atlantis.GamepadButton": 1,
                "Atlantis.GamepadAxis": 1,
                "Atlantis.GamepadState": 1,
                "Atlantis.Gamepad": 1,
                "Atlantis.KeyboardState": 1,
                "Atlantis.KeyboardManager": 1,
                "Atlantis.Keys": 1,
                "Atlantis.ButtonState": 1,
                "Atlantis.MouseState": 1,
                "Atlantis.Mouse": 1,
                "Atlantis.TouchLocationState": 1,
                "Atlantis.TouchPanelState": 1,
                "Atlantis.TouchPanel": 1,
                "Atlantis.ContentManager": 1,
                "Atlantis.Game": 1,
                "Atlantis.GameComponent": 1,
                "Atlantis.DrawableGameComponent": 1,
                "Atlantis.GameTime": 1,
                "Atlantis.MathHelpers": 1,
                "Atlantis.Matrix": 1,
                "Atlantis.Preloader": 1,
                "Atlantis.Quaternion": 1,
                "Atlantis.Rectangle": 1,
                "Atlantis.Point": 1,
                "Atlantis.Vector2": 1,
                "Atlantis.Vector3": 1,
                "Atlantis.Vector4": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            },
            "file": "Framework\\Vector4.js",
            "line": 11
        },
        "Engine": {
            "name": "Engine",
            "submodules": {},
            "classes": {
                "Atlantis.SpriteAnimation": 1,
                "Atlantis.SpriteAnimator": 1,
                "Atlantis.Camera2D": 1,
                "Atlantis.SpriteGroup": 1,
                "Atlantis.TilemapLayerType": 1,
                "Atlantis.TilemapProjection": 1,
                "Atlantis.Tileset": 1,
                "Atlantis.TilemapLayer": 1,
                "Atlantis.Tilemap": 1,
                "Atlantis.TmxLoader": 1,
                "Atlantis.KeyboardComponent": 1,
                "Atlantis.MusicState": 1,
                "Atlantis.AudioManager": 1,
                "Atlantis.app": 1,
                "Atlantis.input": 1,
                "Atlantis.screen": 1,
                "Atlantis.Engine": 1,
                "Atlantis.Level": 1,
                "Atlantis.LevelManager": 1,
                "Atlantis.Random": 1,
                "Atlantis.StorageManager": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "Atlantis": 1
            },
            "module": "Atlantis",
            "namespace": "",
            "file": "Engine\\StorageManager.js",
            "line": 11,
            "description": "AtlantisEngine.js a lightweight JavaScript game engine."
        },
        "Framework": {
            "name": "Framework",
            "submodules": {},
            "classes": {
                "Atlantis.GraphicsDevice": 1,
                "Atlantis.RenderTarget": 1,
                "Atlantis.SpriteSortMode": 1,
                "Atlantis.SpriteEffect": 1,
                "Atlantis.SpriteBatch": 1,
                "Atlantis.SpriteFont": 1,
                "Atlantis.GamepadButton": 1,
                "Atlantis.GamepadAxis": 1,
                "Atlantis.GamepadState": 1,
                "Atlantis.Gamepad": 1,
                "Atlantis.KeyboardState": 1,
                "Atlantis.KeyboardManager": 1,
                "Atlantis.Keys": 1,
                "Atlantis.ButtonState": 1,
                "Atlantis.MouseState": 1,
                "Atlantis.Mouse": 1,
                "Atlantis.TouchLocationState": 1,
                "Atlantis.TouchPanelState": 1,
                "Atlantis.TouchPanel": 1,
                "Atlantis.ContentManager": 1,
                "Atlantis.Game": 1,
                "Atlantis.GameComponent": 1,
                "Atlantis.DrawableGameComponent": 1,
                "Atlantis.GameTime": 1,
                "Atlantis.MathHelpers": 1,
                "Atlantis.Matrix": 1,
                "Atlantis.Preloader": 1,
                "Atlantis.Quaternion": 1,
                "Atlantis.Rectangle": 1,
                "Atlantis.Point": 1,
                "Atlantis.Vector2": 1,
                "Atlantis.Vector3": 1,
                "Atlantis.Vector4": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "Atlantis": 1
            },
            "module": "Atlantis",
            "namespace": "",
            "file": "Framework\\Vector4.js",
            "line": 11,
            "description": "AtlantisEngine.js a lightweight JavaScript game engine."
        }
    },
    "classes": {
        "Atlantis.SpriteAnimation": {
            "name": "Atlantis.SpriteAnimation",
            "shortname": "SpriteAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Animation.js",
            "line": 11,
            "description": "A sprite animation define an animation which is a group of frames\nAn animation is a serie of rectangle on a spritesheet",
            "is_constructor": 1,
            "params": [
                {
                    "name": "length",
                    "description": "The number of frames"
                },
                {
                    "name": "framerate",
                    "description": "The desired frame rate."
                }
            ]
        },
        "Atlantis.SpriteAnimator": {
            "name": "Atlantis.SpriteAnimator",
            "shortname": "SpriteAnimator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Animation.js",
            "line": 53,
            "description": "A SpriteAnimator is a class that is used to play sprite animations.\nA sprite has many animation that are stored in a dictionary[name] => spriteAnimation",
            "is_constructor": 1
        },
        "Atlantis.Camera2D": {
            "name": "Atlantis.Camera2D",
            "shortname": "Camera2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Camera2D.js",
            "line": 11,
            "description": "A camera used in a 2D scene to manage scrolling",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The position on X of the camera.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The position on Y of the camera.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The size of the camera.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The size of the camera.",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.SpriteGroup": {
            "name": "Atlantis.SpriteGroup",
            "shortname": "SpriteGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 11,
            "description": "A collection that initialize, load, update and draw _sprites.",
            "extends": "Sprite",
            "is_constructor": 1
        },
        "Atlantis.TilemapLayerType": {
            "name": "Atlantis.TilemapLayerType",
            "shortname": "TilemapLayerType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 11,
            "description": "Define the type of a layer\n- Tiles\n- Background\n- Objects",
            "static": 1
        },
        "Atlantis.TilemapProjection": {
            "name": "Atlantis.TilemapProjection",
            "shortname": "TilemapProjection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 25,
            "description": "Define the type of projection of the map\n- Orthogonal (2D)\n- Isometric (2D Iso)",
            "static": 1
        },
        "Atlantis.Tileset": {
            "name": "Atlantis.Tileset",
            "shortname": "Tileset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 37,
            "description": "Represent a tileset which is an image that contains many other images named tiles.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "tileset",
                    "description": "(optional) An object that contains all necessary data to construct a tileset.",
                    "type": "Atlantis.Tileset|Object"
                }
            ]
        },
        "Atlantis.TilemapLayer": {
            "name": "Atlantis.TilemapLayer",
            "shortname": "TilemapLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 59,
            "description": "Represent a tilemap layer which contains a tileset or background.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "layer",
                    "description": "(optional) An object that contains all necessary data to construct a layer.",
                    "type": "Atlantis.TilemapLayer|Object"
                }
            ]
        },
        "Atlantis.Tilemap": {
            "name": "Atlantis.Tilemap",
            "shortname": "Tilemap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 86,
            "description": "This class is responsible to store all data for drawing a tilemap.\nA tilemap is composed of layers, tilesets and backgrounds.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "tilemap",
                    "description": "(optional) An object that contains tilemap data.",
                    "type": "Atlantis.Tilemap|Object"
                }
            ]
        },
        "Atlantis.TmxLoader": {
            "name": "Atlantis.TmxLoader",
            "shortname": "TmxLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\TmxLoader.js",
            "line": 11,
            "description": "A loader that load a map created with Tiled and exported to JSON.",
            "static": 1
        },
        "Atlantis.KeyboardComponent": {
            "name": "Atlantis.KeyboardComponent",
            "shortname": "KeyboardComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 13,
            "description": "A keyboard component that be used with KeyboardHelper to provide some\ninteresting keyboars states as pressed, justPressed, etc.",
            "is_constructor": 1,
            "extends": "Atlantis.GameComponent",
            "params": [
                {
                    "name": "game",
                    "description": "A game instance.",
                    "type": "Atlantis.Game"
                }
            ]
        },
        "Atlantis.MusicState": {
            "name": "Atlantis.MusicState",
            "shortname": "MusicState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\AudioManager.js",
            "line": 11,
            "description": "Define a music status",
            "static": 1
        },
        "Atlantis.AudioManager": {
            "name": "Atlantis.AudioManager",
            "shortname": "AudioManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\AudioManager.js",
            "line": 20,
            "description": "An audio manager to play sound and musics.",
            "is_constructor": 1
        },
        "Atlantis.app": {
            "name": "Atlantis.app",
            "shortname": "app",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\GameApplication.js",
            "line": 11,
            "description": "This is a static class that contains some managers such as\nStorage, Audio, Level, etc.",
            "static": 1
        },
        "Atlantis.input": {
            "name": "Atlantis.input",
            "shortname": "input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\GameApplication.js",
            "line": 19,
            "description": "This is a static class that contains input managers",
            "static": 1
        },
        "Atlantis.screen": {
            "name": "Atlantis.screen",
            "shortname": "screen",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\GameApplication.js",
            "line": 26,
            "description": "This is a static class that contains screen management",
            "static": 1
        },
        "Atlantis.Engine": {
            "name": "Atlantis.Engine",
            "shortname": "Engine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\GameApplication.js",
            "line": 33,
            "description": "The engine class that initialize an Atlantis.Game object and setup managers and scene.",
            "is_constructor": 1,
            "extends": "Atlantis.Game",
            "params": [
                {
                    "name": "width",
                    "description": "Desired screen width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Desired screen height",
                    "type": "Number"
                },
                {
                    "name": "domElement",
                    "description": "The DOM element to use for canvas (optional).",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Level": {
            "name": "Atlantis.Level",
            "shortname": "Level",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Level.js",
            "line": 11,
            "description": "An interface for a 2D level."
        },
        "Atlantis.LevelManager": {
            "name": "Atlantis.LevelManager",
            "shortname": "LevelManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\LevelManager.js",
            "line": 11,
            "description": "A level manager.",
            "is_constructor": 1
        },
        "Atlantis.Random": {
            "name": "Atlantis.Random",
            "shortname": "Random",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Random.js",
            "line": 11,
            "description": "An helper to generate random value for some types.",
            "static": 1
        },
        "Atlantis.StorageManager": {
            "name": "Atlantis.StorageManager",
            "shortname": "StorageManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\StorageManager.js",
            "line": 11,
            "description": "A storage manager that work with localStorage",
            "is_constructor": 1
        },
        "Atlantis.GraphicsDevice": {
            "name": "Atlantis.GraphicsDevice",
            "shortname": "GraphicsDevice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 15,
            "description": "The graphics device is response to manage screen (canvas) and draws (render target).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "The desired screen width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The desired screen height",
                    "type": "Number"
                },
                {
                    "name": "settings",
                    "description": "A list of options (webGL, backBufferWidth/Height, canvas).",
                    "type": "Object"
                }
            ]
        },
        "Atlantis.RenderTarget": {
            "name": "Atlantis.RenderTarget",
            "shortname": "RenderTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 10,
            "description": "A render target is a graphics surface where we can draw",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "Desired width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Desired height.",
                    "type": "Number"
                },
                {
                    "name": "(optional)",
                    "description": "is3D Define if the surface is a 3D surface (WebGL)",
                    "type": "Boolean"
                },
                {
                    "name": "(optional)",
                    "description": "A canvas to use with this renderTarget",
                    "type": "HTMLCanvas"
                }
            ]
        },
        "Atlantis.SpriteSortMode": {
            "name": "Atlantis.SpriteSortMode",
            "shortname": "SpriteSortMode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 10,
            "description": "Define the sort mode of a sprite batch.\n- BackToFront: All items of the batch are drawn to the smallest to the biggest layer depth\n- FrontToBack: All items of the batch are drawn to the biggest to the smallest layer depth\n- Immediate: No sorting, all is drawn without layer depth sorting.",
            "static": 1
        },
        "Atlantis.SpriteEffect": {
            "name": "Atlantis.SpriteEffect",
            "shortname": "SpriteEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 24,
            "description": "Define an effect to apply on a sprite.",
            "static": 1
        },
        "Atlantis.SpriteBatch": {
            "name": "Atlantis.SpriteBatch",
            "shortname": "SpriteBatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 40,
            "description": "Define a SpriteBatch that is responsible to draw multiple elements on screen on one pass.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "graphics device.",
                    "type": "Atlantis.Graphics.GraphicsDevice"
                }
            ]
        },
        "Atlantis.SpriteFont": {
            "name": "Atlantis.SpriteFont",
            "shortname": "SpriteFont",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics\\SpriteFont.js",
            "line": 10,
            "description": "Define a drawable text.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "font name to use (default Arial). You can use a webfont loaded in CSS.",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "size of the font.",
                    "type": "Number"
                },
                {
                    "name": "The",
                    "description": "style of the font (normal, italic, bold)",
                    "type": "String"
                }
            ]
        },
        "Atlantis.GamepadButton": {
            "name": "Atlantis.GamepadButton",
            "shortname": "GamepadButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Gamepad.js",
            "line": 10,
            "description": "Define buttons for the gamepad",
            "static": 1
        },
        "Atlantis.GamepadAxis": {
            "name": "Atlantis.GamepadAxis",
            "shortname": "GamepadAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Gamepad.js",
            "line": 34,
            "description": "Define axis for the gamepad",
            "static": 1
        },
        "Atlantis.GamepadState": {
            "name": "Atlantis.GamepadState",
            "shortname": "GamepadState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Gamepad.js",
            "line": 50,
            "description": "Define the state of the gamepad at a specified time",
            "is_constructor": 1,
            "params": [
                {
                    "name": "axis",
                    "description": "An array of axis values",
                    "type": "Array"
                },
                {
                    "name": "buttons",
                    "description": "An array of buttons values (true/false)",
                    "type": "Array"
                }
            ]
        },
        "Atlantis.Gamepad": {
            "name": "Atlantis.Gamepad",
            "shortname": "Gamepad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Gamepad.js",
            "line": 118,
            "description": "The gamepad class is responsible to manage gamepads connected to the device.",
            "is_constructor": 1,
            "extends": "Atlantis.GameComponent"
        },
        "Atlantis.KeyboardState": {
            "name": "Atlantis.KeyboardState",
            "shortname": "KeyboardState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Keyboard.js",
            "line": 15,
            "description": "Define a keyboard state.",
            "is_constructor": 1
        },
        "Atlantis.KeyboardManager": {
            "name": "Atlantis.KeyboardManager",
            "shortname": "KeyboardManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Keyboard.js",
            "line": 56,
            "description": "A keyboard input manager.",
            "is_constructor": 1
        },
        "Atlantis.Keys": {
            "name": "Atlantis.Keys",
            "shortname": "Keys",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Keys.js",
            "line": 11,
            "description": "An enumeration of keys who can be pressed/released"
        },
        "Atlantis.ButtonState": {
            "name": "Atlantis.ButtonState",
            "shortname": "ButtonState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Mouse.js",
            "line": 10,
            "description": "Define a button state which is released or pressed.",
            "static": 1
        },
        "Atlantis.MouseState": {
            "name": "Atlantis.MouseState",
            "shortname": "MouseState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Mouse.js",
            "line": 21,
            "description": "Define a mouse state.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The position of the cursor on X axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The position of the cursor on Y axis.",
                    "type": "Number"
                },
                {
                    "name": "scroolWheelValue",
                    "description": "The value of the scroll",
                    "type": "Number"
                },
                {
                    "name": "buttons",
                    "description": "An array with the states of each buttons",
                    "type": "Array"
                }
            ]
        },
        "Atlantis.Mouse": {
            "name": "Atlantis.Mouse",
            "shortname": "Mouse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\Mouse.js",
            "line": 52,
            "description": "The Mouse class is responsible to manage mouse events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "domElement",
                    "description": "The DOM element to use (default is document.body).",
                    "type": "HTMLElement"
                }
            ]
        },
        "Atlantis.TouchLocationState": {
            "name": "Atlantis.TouchLocationState",
            "shortname": "TouchLocationState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\TouchPanel.js",
            "line": 10,
            "description": "Define the type of touch event\n- Invalid\n- Moved\n- Pressed\n- Released",
            "static": 1
        },
        "Atlantis.TouchPanelState": {
            "name": "Atlantis.TouchPanelState",
            "shortname": "TouchPanelState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\TouchPanel.js",
            "line": 26,
            "description": "Define a touch state with a position and a touch state.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "panelState",
                    "description": "An object that contains states and position of the touch event.",
                    "type": "Object"
                }
            ]
        },
        "Atlantis.TouchPanel": {
            "name": "Atlantis.TouchPanel",
            "shortname": "TouchPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Input\\TouchPanel.js",
            "line": 46,
            "description": "This class is responsible to manage touch events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "DOM element to use for events (default is document.body).",
                    "type": "HTMLElement"
                }
            ]
        },
        "Atlantis.ContentManager": {
            "name": "Atlantis.ContentManager",
            "shortname": "ContentManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\ContentManager.js",
            "line": 10,
            "description": "Create a content manager that manage _assets.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "rootDirectory",
                    "description": "The root folder to load _assets (default is the current folder).",
                    "type": "String"
                }
            ]
        },
        "Atlantis.Game": {
            "name": "Atlantis.Game",
            "shortname": "Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Game.js",
            "line": 14,
            "description": "Create a game instance who is the starting point of the Framework.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "Desired screen width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Desired screen height.",
                    "type": "Height"
                },
                {
                    "name": "(optional)",
                    "description": "domElement Sepecify a DOM element to attach the canvas.",
                    "type": "DomElement"
                },
                {
                    "name": "(optional)",
                    "description": "params",
                    "type": "Params"
                }
            ]
        },
        "Atlantis.GameComponent": {
            "name": "Atlantis.GameComponent",
            "shortname": "GameComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\GameComponent.js",
            "line": 15,
            "description": "Create a game component.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "A game instance.",
                    "type": "Atlantis.Game"
                }
            ]
        },
        "Atlantis.DrawableGameComponent": {
            "name": "Atlantis.DrawableGameComponent",
            "shortname": "DrawableGameComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\GameComponent.js",
            "line": 77,
            "description": "Create a drawable game component.",
            "is_constructor": 1,
            "extends": "Atlantis.GameComponent",
            "params": [
                {
                    "name": "game",
                    "description": "A game instance.",
                    "type": "Atlantis.Game"
                }
            ]
        },
        "Atlantis.GameTime": {
            "name": "Atlantis.GameTime",
            "shortname": "GameTime",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\GameTime.js",
            "line": 11,
            "description": "Create a game time object who's responsible to get time informations.",
            "is_constructor": 1
        },
        "Atlantis.MathHelpers": {
            "name": "Atlantis.MathHelpers",
            "shortname": "MathHelpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\MathHelper.js",
            "line": 11
        },
        "Atlantis.Matrix": {
            "name": "Atlantis.Matrix",
            "shortname": "Matrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Matrix.js",
            "line": 11,
            "description": "Create a matrix. Parameter can be a matrix, an array of 16 floats or nothing (all fields case are sets to 0).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Atlantis.Matrix|Array"
                }
            ]
        },
        "Atlantis.Preloader": {
            "name": "Atlantis.Preloader",
            "shortname": "Preloader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Preloader.js",
            "line": 11,
            "description": "The Preloader is used during asset loading in game class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "",
                    "type": "Atlantis.Game"
                }
            ]
        },
        "Atlantis.Quaternion": {
            "name": "Atlantis.Quaternion",
            "shortname": "Quaternion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Quaternion.js",
            "line": 11,
            "description": "Define a quaternion.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "Value for X coordinate.",
                    "type": "Number|Quaternion"
                },
                {
                    "name": "y",
                    "description": "Value for Y coordinate.",
                    "type": "Quaternion"
                },
                {
                    "name": "z",
                    "description": "Value for Z coordinate.",
                    "type": "Quaternion"
                },
                {
                    "name": "w",
                    "description": "Value for W coordinate.",
                    "type": "Quaternion"
                }
            ]
        },
        "Atlantis.Rectangle": {
            "name": "Atlantis.Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Rectangle.js",
            "line": 11,
            "description": "Create a rectangle structure.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "A value for X coordinate.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "A value for Y coordinate.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "A value for the width of the rectangle.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "A value for the height of the rectangle",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Point": {
            "name": "Atlantis.Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector2.js",
            "line": 11,
            "description": "Create a point structure.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "A value for X coordinate.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "A value for Y coordinate.",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Vector2": {
            "name": "Atlantis.Vector2",
            "shortname": "Vector2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector2.js",
            "line": 38,
            "description": "Create a new Vector2",
            "is_constructor": 1
        },
        "Atlantis.Vector3": {
            "name": "Atlantis.Vector3",
            "shortname": "Vector3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector3.js",
            "line": 11,
            "description": "Create a vector with three coordinates. If you pass a Vector3 in first parameter,\nits filed are copied to the new vector (work like a copy constructor).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "X value or a Vector3 object     * @param {Number} The Y value.",
                    "type": "Number|Atlantis.Vector3"
                },
                {
                    "name": "The",
                    "description": "Z value.",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Vector4": {
            "name": "Atlantis.Vector4",
            "shortname": "Vector4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector4.js",
            "line": 11,
            "description": "A vector4 class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Value",
                    "description": "for x coordinate or a Vector4 object.",
                    "type": "Number|Atlantis.Vector4"
                },
                {
                    "name": "Value",
                    "description": "for y coordinate",
                    "type": "Number"
                },
                {
                    "name": "Value",
                    "description": "for z coordinate.",
                    "type": "Number"
                },
                {
                    "name": "Value",
                    "description": "for w coordinate.",
                    "type": "Number"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 28,
            "description": "Gets the next available frame of the animation.",
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "Return the next frame of the animation.",
                "type": "Atlantis.Rectangle"
            },
            "class": "Atlantis.SpriteAnimation",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 40,
            "description": "Update animation index relative to time.",
            "itemtype": "method",
            "name": "update",
            "class": "Atlantis.SpriteAnimation",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 72,
            "description": "Initialize the animator",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "animationWidth",
                    "description": "The width of a frame.",
                    "type": "Number"
                },
                {
                    "name": "animationHeight",
                    "description": "The height of a frame.",
                    "type": "Number"
                },
                {
                    "name": "textureWidth",
                    "description": "The width of the texture (spritesheet).",
                    "type": "Number"
                },
                {
                    "name": "textureHeight",
                    "description": "The height of the texture (spritesheet).",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.SpriteAnimator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 92,
            "description": "Add an animation to the animator.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation.",
                    "type": "String"
                },
                {
                    "name": "framesIndex",
                    "description": "An array of indices that compose the animation on the spritesheet.",
                    "type": "Array"
                },
                {
                    "name": "framerate",
                    "description": "The desired framerate for this animation.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.SpriteAnimator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 126,
            "description": "Play an animation.",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "animationName",
                    "description": "The name of the animation to play.",
                    "type": "String"
                }
            ],
            "class": "Atlantis.SpriteAnimator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 137,
            "itemtype": "method",
            "name": "getCurrentAnimation",
            "class": "Atlantis.SpriteAnimator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 148,
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": ""
                },
                {
                    "name": "lastDistance",
                    "description": ""
                }
            ],
            "class": "Atlantis.SpriteAnimator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 160,
            "itemtype": "method",
            "name": "checkForIDLEAnimation",
            "class": "Atlantis.SpriteAnimator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Camera2D.js",
            "line": 41,
            "description": "Follow a sprite",
            "itemtype": "method",
            "name": "follow",
            "params": [
                {
                    "name": "sprite",
                    "description": "A sprite to follow.",
                    "type": "Atlantis.Sprite"
                }
            ],
            "class": "Atlantis.Camera2D",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Camera2D.js",
            "line": 50,
            "description": "Gets the position of the sprite on screen relative to the camera position.",
            "itemtype": "method",
            "name": "getSpritePosition",
            "return": {
                "description": "Return a structure with x and y coordinates.",
                "type": "Object"
            },
            "class": "Atlantis.Camera2D",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Camera2D.js",
            "line": 62,
            "description": "Gets the relative position of a sprite relative to the camera position.",
            "itemtype": "method",
            "name": "getRelativePosition",
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite to use.",
                    "type": "Atlantis.Sprite"
                }
            ],
            "return": {
                "description": "Return a structure with x and y coordinates.",
                "type": "Object"
            },
            "class": "Atlantis.Camera2D",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Camera2D.js",
            "line": 72,
            "description": "Update the camera position. If a sprite is attached to it, its position is managed by the camera.",
            "itemtype": "method",
            "name": "update",
            "class": "Atlantis.Camera2D",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 58,
            "description": "Active or not the sprite.",
            "itemtype": "property",
            "name": "active",
            "type": "{Boolean}",
            "default": "true",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 71,
            "description": "Indicate if the sprite is alive or dead.",
            "itemtype": "property",
            "name": "alive",
            "type": "{Boolean}",
            "default": "true",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 88,
            "description": "Position on X axis.",
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "default": "0",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 102,
            "description": "Position on Y axis.",
            "itemtype": "property",
            "name": "y",
            "type": "{Boolean}",
            "default": "0",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 116,
            "description": "Sprite's width.",
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "default": "0",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 126,
            "description": "Sprite's height.",
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "default": "0",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 136,
            "description": "The name of the texture used by the sprite.",
            "itemtype": "property",
            "name": "textureName",
            "type": "{String}",
            "default": "\"\"",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 149,
            "description": "Sprite's texture.",
            "itemtype": "property",
            "name": "texture",
            "type": "{Object}",
            "default": "null",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 177,
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback called when the sprite is fully loaded.",
                    "type": "Function"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 203,
            "itemtype": "method",
            "name": "collides",
            "return": {
                "description": "Return true if collides otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 218,
            "description": "Kill the sprite and put it in a cache so that it can be recycled if needed.",
            "itemtype": "method",
            "name": "kill",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 228,
            "description": "Revive the Sprite and remove it from the recycle cache.",
            "itemtype": "method",
            "name": "revive",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 238,
            "itemtype": "method",
            "name": "prepareAnimation",
            "params": [],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 255,
            "itemtype": "method",
            "name": "addAnimation",
            "params": [],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 269,
            "itemtype": "method",
            "name": "play",
            "params": [],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 280,
            "description": "Function called before update process.",
            "itemtype": "method",
            "name": "preUpdate",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 287,
            "description": "Update process.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 316,
            "description": "Method called after the update process.",
            "itemtype": "method",
            "name": "postUpdate",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 370,
            "description": "Draw the sprite on screen.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "spriteBatch",
                    "description": "",
                    "type": "Atlantis.SpriteBatch"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 381,
            "itemtype": "method",
            "name": "setSize",
            "params": [],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 49,
            "description": "Load assets of all members.",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 69,
            "description": "Update logic of all members.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 89,
            "description": "Function called before update process.",
            "itemtype": "method",
            "name": "preUpdate",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 96,
            "description": "Draw all members on screen.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Atlantis.SpriteBatch"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 111,
            "description": "Clear the collection.",
            "itemtype": "method",
            "name": "clear",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 140,
            "itemtype": "method",
            "name": "collidesWithGroup",
            "params": [
                {
                    "name": "sprite",
                    "description": "",
                    "type": "Atlantis.Sprite"
                },
                {
                    "name": "computeBoundingRect",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 154,
            "description": "Compute the bounding size of the group.",
            "itemtype": "method",
            "name": "computeBoundingSize",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 169,
            "description": "Count the number of living sprite in the group.",
            "itemtype": "method",
            "name": "countLiving",
            "return": {
                "description": "Return the number of living sprites.",
                "type": "Number"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 184,
            "description": "Count the number of dead sprite in the group.",
            "itemtype": "method",
            "name": "countDead",
            "return": {
                "description": "Return the number of dead sprites.",
                "type": "Number"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 199,
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 211,
            "description": "Gets an sprite from the group.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the sprite on the group.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 226,
            "description": "Gets the first dead sprite if available.",
            "itemtype": "method",
            "name": "getFirstDead",
            "return": {
                "description": "Return the first killed sprite otherwise return null.",
                "type": "Atlantis.Sprite"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 243,
            "description": "Gets the first alive sprite if available.",
            "itemtype": "method",
            "name": "getFirstAlive",
            "return": {
                "description": "Return the first alive sprite, otherwise return null.",
                "type": "Atlantis.Sprite"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 260,
            "description": "Gets the first null index.",
            "itemtype": "method",
            "name": "getFirstNull",
            "return": {
                "description": "Return the index of the first null element in the group otherwise return -1.",
                "type": "Number"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 297,
            "description": "Add an sprite to the group.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite to add.",
                    "type": "Atlantis.Sprite"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 324,
            "description": "Remove a sprite from the group at the position.",
            "itemtype": "method",
            "name": "removeAt",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the sprite to remove.",
                    "type": "Number"
                },
                {
                    "name": "splice",
                    "description": "Whether the object should be cut from the array entirely or not.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 351,
            "description": "remove a sprite from the group.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "sprite",
                    "description": "The sprite to remove.",
                    "type": "Atlantis.Sprite"
                },
                {
                    "name": "splice",
                    "description": "Whether the object should be cut from the array entirely or not.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 362,
            "description": "Replace a sprite by another.",
            "methode": "replace",
            "params": [
                {
                    "name": "oldSprite",
                    "description": "The current sprite of this group that must be replaced.",
                    "type": "Atlantis.Sprite"
                },
                {
                    "name": "newSprite",
                    "description": "The new sprite to replace the old sprite.",
                    "type": "Atlantis.Sprite"
                }
            ],
            "return": {
                "description": "Return the new sprite if the replace operation success, otherwise return null.",
                "type": "Atlantis.Sprite"
            },
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 124,
            "description": "Draw the tilemap if it's visible and loaded.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "spriteBatch",
                    "description": "An instance of SpriteBatch for drawing the tileset.",
                    "type": "Atlantis.SpriteBatch"
                },
                {
                    "name": "camera",
                    "description": "The camera to use to defined what must be drawn.",
                    "type": "Atlantis.Camera2D"
                }
            ],
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 145,
            "description": "Draw the background with this defined offset",
            "itemtype": "method",
            "name": "drawBackground",
            "params": [
                {
                    "name": "spriteBatch",
                    "description": "An instance of SpriteBatch for drawing the background.",
                    "type": "Atlantis.SpriteBatch"
                },
                {
                    "name": "layer",
                    "description": "The layer to draw.",
                    "type": "Atlantis.TilemapLayer"
                },
                {
                    "name": "background",
                    "description": "An image or canvas to draw as background.",
                    "type": "Image|Canvas"
                }
            ],
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 156,
            "description": "Draw tiles with the defined offset, spacing and margin",
            "itemtype": "method",
            "name": "drawLayer",
            "params": [
                {
                    "name": "spriteBatch",
                    "description": "An instance of SpriteBatch for drawing the tileset.",
                    "type": "Atlantis.SpriteBatch"
                },
                {
                    "name": "camera",
                    "description": "The camera to use to defined what must be drawn.",
                    "type": "Atlantis.Camera2D"
                },
                {
                    "name": "layer",
                    "description": "The layer to draw.",
                    "type": "Atlantis.TilemapLayer"
                },
                {
                    "name": "The",
                    "description": "tileset to use for drawing the layer.",
                    "type": "Atlantis.Tileset"
                }
            ],
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 223,
            "description": "Get a transformed position from isometric world coordinates to screen coordinates.",
            "itemtype": "method",
            "name": "isoToScreen",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on isometric world.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on isometric world.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return an object with transformed coordinates.",
                "type": "Object"
            },
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 235,
            "description": "Get a transformed position from screen coordinates to iso coordinates.",
            "itemtype": "method",
            "name": "screenToIso",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on screen.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on screen.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return an object with transformed coordinates.",
                "type": "Object"
            },
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 247,
            "description": "Gets the tile index at the specified position.",
            "itemtype": "method",
            "name": "getTileIdAt",
            "params": [
                {
                    "name": "layerIndex",
                    "description": "The index of the layer",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The position of the tile on X axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The postion of the tile on Y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return the id of the tile at this position if exists, otherwise return 0.",
                "type": "Number"
            },
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Tilemap.js",
            "line": 278,
            "description": "Extract a tile from tileset and return a canvas element with the tile drawn in it.\nIt's usefull to do some tests, such as pixel perfect. \nNote 1: that it's work with a scale different to 1.\nNote 2: The extraction is done once, the result is stored in a cache, so you can safely call this method.",
            "itemtype": "method",
            "name": "getTileAt",
            "params": [
                {
                    "name": "tileset",
                    "description": "The tileset to use to extract the tile.",
                    "type": "Atlantis.Tileset"
                },
                {
                    "name": "layerIndex",
                    "description": "The index of the layer",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "The position of the tile on X axis.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The postion of the tile on Y axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a canvas element of the specified tile if exists, otherwise return null.",
                "type": "HTMLCanvas"
            },
            "class": "Atlantis.Tilemap",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\TmxLoader.js",
            "line": 17,
            "description": "Load a tilemap at the specified path.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "mapPath",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Return a tilemap.",
                "type": "Atlantis.Tilemap"
            },
            "class": "Atlantis.TmxLoader",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 28,
            "description": "Update key states.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 38,
            "itemtype": "method",
            "name": "pressed",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 48,
            "itemtype": "method",
            "name": "released",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 58,
            "itemtype": "method",
            "name": "justPressed",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 68,
            "itemtype": "method",
            "name": "justReleased",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 78,
            "itemtype": "method",
            "name": "up",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 88,
            "itemtype": "method",
            "name": "down",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 98,
            "itemtype": "method",
            "name": "left",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 108,
            "itemtype": "method",
            "name": "right",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 118,
            "itemtype": "method",
            "name": "enter",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 128,
            "itemtype": "method",
            "name": "space",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 138,
            "itemtype": "method",
            "name": "escape",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 148,
            "itemtype": "method",
            "name": "control",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 158,
            "itemtype": "method",
            "name": "shift",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Input\\KeyboardComponent.js",
            "line": 168,
            "itemtype": "method",
            "name": "tab",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "Atlantis.Keys|Number"
                }
            ],
            "return": {
                "description": "Return true if pressed, otherwise return false.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardComponent",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 32,
            "description": "Play a sound or a music one time",
            "itemtype": "method",
            "name": "playOneShot",
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 40,
            "description": "Play a music.",
            "itemtype": "method",
            "name": "playMusic",
            "params": [
                {
                    "name": "music",
                    "description": "An HTML Audio Element that contains the music.",
                    "type": "AudioElement"
                },
                {
                    "name": "repeat",
                    "description": "Sets to true for enable repeat.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 54,
            "description": "Stop the current played music.",
            "itemtype": "method",
            "name": "stopMusic",
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 63,
            "description": "Pause the current played music.",
            "itemtype": "method",
            "name": "pauseMusic",
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 74,
            "description": "Resume a paused music.",
            "itemtype": "method",
            "name": "resume",
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 37,
            "description": "Update active level.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 48,
            "description": "Draw active levels.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 63,
            "description": "Add a level to the level manager.",
            "itemtype": "method",
            "name": "loadLevel",
            "params": [
                {
                    "name": "levelParam",
                    "description": "Instance of the level to add.",
                    "type": "Altantis.level"
                }
            ],
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 93,
            "description": "Add a level to the level manager.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "name",
                    "description": "Instance of the level to add.",
                    "type": "Altantis.level"
                },
                {
                    "name": "autoload",
                    "description": "Sets to `true` to load the level.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 107,
            "description": "Remove a level by its index, name or instance.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "nameOrIndex",
                    "description": "level's index or name.",
                    "type": "Number|String"
                }
            ],
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 134,
            "description": "Gets a level by its index or its name.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "nameOrIndex",
                    "description": "level's index or name.",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "Return the level if it exists, otherwise return null.",
                "type": "Atlantis.Level"
            },
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\LevelManager.js",
            "line": 151,
            "description": "Get a level by its name",
            "itemtype": "method",
            "name": "getLevelByName",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the level to load.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Return the level if it exists, otherwise return null.",
                "type": "Atlantis.Level"
            },
            "class": "Atlantis.LevelManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 17,
            "description": "Gets a random value.",
            "itemtype": "method",
            "name": "value",
            "return": {
                "description": "Return a random value.",
                "type": "Number"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 26,
            "description": "Gets a random float between min and max.",
            "itemtype": "method",
            "name": "randomFloat",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a random value between min and max.",
                "type": "Number"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 37,
            "description": "Gets a random integer between min and max.",
            "itemtype": "method",
            "name": "randomFloat",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a random value between min and max.",
                "type": "Number"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 48,
            "description": "Gets a random Vector2 between min and max.",
            "itemtype": "method",
            "name": "vector2",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a random Vector2 between min and max.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 59,
            "description": "Gets a random Vector3 between min and max.",
            "itemtype": "method",
            "name": "vector3",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a random vector3 between min and max.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 70,
            "description": "Gets a random vector4 between min and max.",
            "itemtype": "method",
            "name": "vector4",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a random vector4 between min and max.",
                "type": "Atlantis.Vector4"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 81,
            "description": "Gets a random float between min and max.",
            "itemtype": "method",
            "name": "color",
            "params": [
                {
                    "name": "min",
                    "description": "The minimum value.",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The maximum value.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a random color in hexadecimal format.",
                "type": "String"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Random.js",
            "line": 92,
            "description": "Gets a random element from an Array.",
            "itemtype": "method",
            "name": "randomArrayItem",
            "params": [
                {
                    "name": "array",
                    "description": "The array to use.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Return a random value from the array.",
                "type": "Object"
            },
            "class": "Atlantis.Random",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StorageManager.js",
            "line": 20,
            "description": "Save data in the localStorage.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "container",
                    "description": "The localStorage key.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Desired name for the data who'll save.",
                    "type": "String"
                },
                {
                    "name": "or",
                    "description": "{String} data An object to serialize or a serialized object.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.StorageManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StorageManager.js",
            "line": 35,
            "description": "Load data from the localStorage.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "name",
                    "description": "The data key.",
                    "type": "String"
                },
                {
                    "name": "defaultValue",
                    "description": "The default value if the data not exists.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The object if exists otherwise return defaultValue",
                "type": "Object"
            },
            "class": "Atlantis.StorageManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StorageManager.js",
            "line": 47,
            "description": "Gets the localStorage key with a container name and a data name.",
            "itemtype": "method",
            "name": "getLoadStorageKey",
            "params": [
                {
                    "name": "name",
                    "description": "Desired name for the data who'll save.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The localStorage final key.",
                "type": "String"
            },
            "class": "Atlantis.StorageManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 53,
            "description": "Apply the values of preferredBackBufferWidth/Height to the screen.\nThe back buffer is moved according to the scale mode.\nNote that an event of type Atlantis.event.ResolutionChanged is fired at the end of the process.",
            "itemtype": "method",
            "name": "applyChanges",
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 99,
            "description": "Gets the back buffer renderTarget.",
            "itemtype": "method",
            "name": "getBackBuffer",
            "return": {
                "description": "Return the renderTarget of the back buffer.",
                "type": "Atlantis.RenderTarget"
            },
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 108,
            "description": "Gets the front buffer renderTarget.",
            "itemtype": "method",
            "name": "getFrontBuffer",
            "return": {
                "description": "Return the renderTarget of the front buffer.",
                "type": "Atlantis.RenderTarget"
            },
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 117,
            "description": "Clear all buffers",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "color",
                    "description": "The clear color (default black).",
                    "type": "String"
                }
            ],
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 127,
            "description": "Draw the back buffer into the front buffer.",
            "itemtype": "method",
            "name": "present",
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 135,
            "description": "Toggle the passed element in fullscreen mode if the browser support this feature.",
            "itemtype": "method",
            "name": "toggleFullscreen",
            "params": [
                {
                    "name": "The",
                    "description": "node to use (default is the canvas element).",
                    "type": "HTMLElement"
                }
            ],
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\GraphicsDevice.js",
            "line": 155,
            "description": "Indicate if the fullscreen mode is active",
            "itemtype": "method",
            "name": "isFullscreen",
            "return": {
                "description": "Return true if the fullscreen mode is active, o",
                "type": "Boolean"
            },
            "class": "Atlantis.GraphicsDevice",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 43,
            "description": "Set the image data of the canvas.",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "imageData",
                    "description": "Data to put in the canvas.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 52,
            "description": "Gets the image data of the canvas.",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "Return the ImageData of the context.",
                "type": "Object"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 62,
            "description": "Get the context of the canvas used to draw.",
            "itemtype": "method",
            "name": "",
            "return": {
                "description": "Return the canvas context.",
                "type": "CanvasContext"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 71,
            "description": "Gets the canvas used to draw.",
            "itemtype": "method",
            "name": "getCanvas",
            "return": {
                "description": "Return the canvas used to draw.",
                "type": "HTMLCanvas"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 80,
            "description": "Gets the width of the drawing surface.",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "Return the width of the drawing surface.",
                "type": "Number"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 89,
            "description": "Gets the height of the drawing surface.",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "Return the height of the drawing surface.",
                "type": "Number"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 98,
            "description": "Change the size of the drawing surface.",
            "itemtype": "method",
            "name": "setSize",
            "params": [
                {
                    "name": "width",
                    "description": "The new width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new height.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 109,
            "description": "Clear the entire surface",
            "itemtype": "method",
            "name": "clear",
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 125,
            "description": "Save the content of the renderTarget to an image",
            "itemtype": "method",
            "name": "saveAsPng",
            "return": {
                "description": "Return a base64 of the image with mime type \"image/png\"",
                "type": "String"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\RenderTarget.js",
            "line": 134,
            "description": "Save the content of the renderTarget to an image",
            "itemtype": "method",
            "name": "saveAsJpg",
            "return": {
                "description": "Return a base64 of the image with mime type \"image/jpg\"",
                "type": "String"
            },
            "class": "Atlantis.RenderTarget",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 70,
            "description": "Begin the batch operation.",
            "itemtype": "method",
            "name": "begin",
            "params": [
                {
                    "name": "The",
                    "description": "type of sorting to use (option, default is Immediate).",
                    "type": "Atlantis.SpriteSortMode"
                },
                {
                    "name": "A",
                    "description": "transform matrix to apply for all items (optional). The matrix is a 3x3 matrix in a single array.\n       - [ScaleX, SkewX, SkewY, ScaleY, TranslationX, TranslationY]",
                    "type": "Array"
                }
            ],
            "class": "Atlantis.SpriteBatch",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 111,
            "description": "Execute the batch process and draw the result in the screen.",
            "itemtype": "method",
            "name": "end",
            "class": "Atlantis.SpriteBatch",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 206,
            "description": "Draw a texture on the screen",
            "itemtype": "method",
            "name": "drawTexture",
            "static": 1,
            "params": [
                {
                    "name": "The",
                    "description": "canvas context.",
                    "type": "CanvasContext"
                },
                {
                    "name": "The",
                    "description": "image or canvas to draw.",
                    "type": "Image"
                },
                {
                    "name": "x",
                    "description": "coordinate.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "coordinate.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "of the image.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "of the image.",
                    "type": "Number"
                },
                {
                    "name": "A",
                    "description": "source rectangle.",
                    "type": "Atlantis.Rectangle"
                }
            ],
            "class": "Atlantis.SpriteBatch",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 227,
            "description": "Draw a texture on the screen",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "The",
                    "description": "image or canvas to draw.",
                    "type": "Image"
                },
                {
                    "name": "The",
                    "description": "position or the rectangle of the image.",
                    "type": "Atlantis.Rectangle|Atlantis.Vector2"
                },
                {
                    "name": "A",
                    "description": "source rectangle.",
                    "type": "Atlantis.Rectangle"
                },
                {
                    "name": "A",
                    "description": "color to apply on the image in hex format.",
                    "type": "String"
                },
                {
                    "name": "Rotation",
                    "description": "of the image.",
                    "type": "Number"
                },
                {
                    "name": "Origin",
                    "description": "of the image (defaut is 0, 0 on top/left).",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Scale",
                    "description": "of the image (default is 1/1);",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "An",
                    "description": "effect to apply (default is none).",
                    "type": "Atlantis.SpriteEffect"
                },
                {
                    "name": "The",
                    "description": "layer depth (Important when SpriteSortMode is set to BackToFront or FrontToBack).",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.SpriteBatch",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\SpriteBatch.js",
            "line": 262,
            "description": "Draw a string on the screen",
            "itemtype": "method",
            "name": "drawString",
            "params": [
                {
                    "name": "The",
                    "description": "SpriteFont to use.",
                    "type": "Atlantis.SpriteFont"
                },
                {
                    "name": "The",
                    "description": "string to draw.",
                    "type": "String"
                },
                {
                    "name": "The",
                    "description": "position of the string.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "The",
                    "description": "color of the string in hex format.",
                    "type": "String"
                },
                {
                    "name": "Rotation",
                    "description": "of the image.",
                    "type": "Number"
                },
                {
                    "name": "Origin",
                    "description": "of the image (defaut is 0, 0 on top/left).",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Scale",
                    "description": "of the image (default is 1/1);",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "An",
                    "description": "effect to apply (default is none).",
                    "type": "Atlantis.SpriteEffect"
                },
                {
                    "name": "The",
                    "description": "layer depth (Important when SpriteSortMode is set to BackToFront or FrontToBack).",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.SpriteBatch",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Graphics\\SpriteFont.js",
            "line": 24,
            "description": "Gets the string passed to drawing context.",
            "itemtype": "method",
            "name": "getFont",
            "return": {
                "description": "Return the string passed to the drawing context.",
                "type": "String"
            },
            "class": "Atlantis.SpriteFont",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Gamepad.js",
            "line": 84,
            "description": "Indicate if the button is down.",
            "itemtype": "method",
            "name": "isButtonDown",
            "params": [
                {
                    "name": "(Number|Atlantis.GamepadButton)",
                    "description": "The identifier of the button"
                },
                {
                    "name": "Return",
                    "description": "the value of the button.",
                    "type": "Boolean|Number"
                }
            ],
            "class": "Atlantis.GamepadState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Gamepad.js",
            "line": 94,
            "description": "Indicate if the button is up.",
            "itemtype": "method",
            "name": "isButtonUp",
            "params": [
                {
                    "name": "(Number|Atlantis.GamepadButton)",
                    "description": "The identifier of the button"
                },
                {
                    "name": "Return",
                    "description": "the value of the button.",
                    "type": "Boolean|Number"
                }
            ],
            "class": "Atlantis.GamepadState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Gamepad.js",
            "line": 104,
            "description": "Gets the value of an axis.",
            "itemtype": "method",
            "name": "getAxis",
            "params": [
                {
                    "name": "(Number|Atlantis.GamepadAxis)",
                    "description": "The identifier of the axis"
                },
                {
                    "name": "Return",
                    "description": "the value of the axis between -1 and 1.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.GamepadState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Gamepad.js",
            "line": 132,
            "description": "Initialize the component and start event listeners",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.Gamepad",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Gamepad.js",
            "line": 176,
            "description": "Update states of connected gamepads",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.Gamepad",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Gamepad.js",
            "line": 207,
            "description": "Gets the state of the gamepad",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "Return the state at this time.",
                "type": "Atlantis.GamepadState"
            },
            "class": "Atlantis.Gamepad",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Keyboard.js",
            "line": 32,
            "description": "Determine if the key is pressed.",
            "itemtype": "method",
            "name": "isKeyDown",
            "params": [
                {
                    "name": "button",
                    "description": "The button to test.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return true if the key is pressed.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Keyboard.js",
            "line": 42,
            "description": "Determine if the key is pressed.",
            "itemtype": "method",
            "name": "isKeyUp",
            "params": [
                {
                    "name": "button",
                    "description": "The button to test.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return true if the key is released.",
                "type": "Boolean"
            },
            "class": "Atlantis.KeyboardState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Keyboard.js",
            "line": 85,
            "description": "Gets the current state of the keyboard.",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "Return the state of the keyboard.",
                "type": "Atlantis.KeyboardState"
            },
            "class": "Atlantis.KeyboardManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Mouse.js",
            "line": 39,
            "description": "Clone the current state.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "Return a clone of this instance.",
                "type": "Atlantis.MouseState"
            },
            "class": "Atlantis.MouseState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\Mouse.js",
            "line": 116,
            "description": "Gets the state of the mouse.",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "Return the state of the mouse at this time.",
                "type": "Atlantis.MouseState"
            },
            "class": "Atlantis.Mouse",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\TouchPanel.js",
            "line": 37,
            "description": "Gets a clone of this state.",
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "Return a clone of this instance.",
                "type": "Atlantis.TouchPanelState"
            },
            "class": "Atlantis.TouchPanelState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\TouchPanel.js",
            "line": 126,
            "description": "Gets the capabilities of the touch panel.",
            "itemtype": "method",
            "name": "getCapabilities",
            "return": {
                "description": "Return an object which contains touch panel capabilities.",
                "type": "Object"
            },
            "class": "Atlantis.TouchPanel",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\TouchPanel.js",
            "line": 135,
            "description": "Get the state of the touch panel at this time.",
            "itemtype": "method",
            "name": "getState",
            "params": [
                {
                    "name": "id",
                    "description": "(optional) A finger id.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if no finger is passed, it return an array of Atlantis.TouchPanelState,\n          otherwise it return an Atlantis.TouchPanelState of the finger id passed in parameter.",
                "type": "Array|Atlantis.TouchPanelState"
            },
            "class": "Atlantis.TouchPanel",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Common.js",
            "line": 16,
            "description": "Ajax method for POST and GET calls.",
            "itemtype": "method",
            "name": "ajax",
            "exemple": "Atlantis.ajax({ url: http://foo.php, data: \"level_id=2&layer=3\", method: \"GET\", async: false, success: myCallback });",
            "class": "Atlantis.ContentManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Common.js",
            "line": 61,
            "description": "An event notifier. If the event doesn't exists it created and stored.",
            "itemtype": "method",
            "name": "notify",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the event to emit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An object to emit with the event.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.ContentManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\ContentManager.js",
            "line": 54,
            "description": "Load an asset from the root directory.\nSupported formats are :\n     - Images : png, jpg, bmp\n     - Audio : mp3, ogg, wav\n     - Video : mp4, ogv\n     - Data : xml, json, js\n\n The type is define with the file extension.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "assetName",
                    "description": "The asset name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A callback function called when the asset is loaded.",
                    "type": "Function"
                }
            ],
            "class": "Atlantis.ContentManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\ContentManager.js",
            "line": 162,
            "description": "Dispose all _assets",
            "itemtype": "method",
            "name": "dispose",
            "class": "Atlantis.ContentManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 70,
            "description": "Gets the scale factor relative to the backbuffer.",
            "itemtype": "property",
            "name": "scaleFactor",
            "type": "Atlantis.Vector2",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 100,
            "description": "Initialize the game logic and components.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 108,
            "description": "Load content.",
            "itemtype": "method",
            "name": "loadContent",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 116,
            "description": "Unload content.",
            "itemtype": "method",
            "name": "unloadContent",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 124,
            "description": "Update",
            "itemtype": "method",
            "name": "update",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 132,
            "description": "In this method the screen must be cleared and components are drawn. All draw code come here.",
            "itemtype": "method",
            "name": "draw",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 144,
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 152,
            "description": "Methods called by the main loop on each frame who call update and draw methods.",
            "itemtype": "method",
            "name": "run",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 189,
            "description": "Set the game in pause mode. The canvas is no more updated and drawn.",
            "itemtype": "method",
            "name": "pause",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 198,
            "description": "Resume a paused game.",
            "itemtype": "method",
            "name": "resume",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 27,
            "description": "Initialize the logic of the component.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 35,
            "description": "Update the logic of the component.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 46,
            "description": "Gets the status of the component.",
            "itemtype": "method",
            "name": "isEnabled",
            "return": {
                "description": "The status of the component.",
                "type": "Boolean"
            },
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 55,
            "description": "Flags used to determine if the initialization processes is done.",
            "itemtype": "method",
            "name": "isInitialized",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 64,
            "description": "Gets the status of the component.",
            "itemtype": "method",
            "name": "@setEnabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "Sets to true to enable",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 92,
            "description": "Load assets of the component.",
            "itemtype": "method",
            "name": "loadContent",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 100,
            "description": "Unload and dispose all assets of the component.",
            "itemtype": "method",
            "name": "unloadContent",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 108,
            "description": "Draw the component on screen.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                },
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 116,
            "description": "Gets the visibility of the component.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Return true if visible otherwise return false",
                "type": "Boolean"
            },
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 125,
            "description": "Set the component visible or invisible",
            "itemtype": "method",
            "name": "setVisible",
            "params": [
                {
                    "name": "visible",
                    "description": ""
                }
            ],
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 138,
            "description": "Create a collection of game components.",
            "is_constructor": 1,
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 149,
            "description": "Initialize logic.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 160,
            "description": "Load assets",
            "itemtype": "method",
            "name": "loadContent",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 171,
            "description": "Unload assets",
            "itemtype": "method",
            "name": "unloadContent",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 182,
            "description": "Update all components",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 195,
            "description": "Draw all components",
            "itemtype": "method",
            "name": "draw",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 207,
            "description": "Add a component to the collection",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "A",
                    "description": "component or drawable gameComponent to add.",
                    "type": "Atlantis.GameComponent"
                }
            ],
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 230,
            "description": "Remove a component from the collection",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Return true if the component has been successfully removed.",
                "type": "Boolean"
            },
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 250,
            "description": "Get a component from the collection",
            "itemtype": "method",
            "name": "get",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameTime.js",
            "line": 20,
            "description": "Reset the game timer.",
            "itemtype": "method",
            "name": "reset",
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameTime.js",
            "line": 31,
            "description": "Update the game time.",
            "itemtype": "method",
            "name": "update",
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameTime.js",
            "line": 43,
            "description": "Gets the elapsed time since last frame.",
            "itemtype": "method",
            "name": "getElapsedTime",
            "return": {
                "description": "The elapsed time since last frame.",
                "type": "Number"
            },
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameTime.js",
            "line": 52,
            "description": "Gets the total elapsed time since the begining.",
            "itemtype": "method",
            "name": "getTotalGameTime",
            "return": {
                "description": "The total elapsed time.",
                "type": "Number"
            },
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameTime.js",
            "line": 61,
            "description": "Gets the current FPS indice.",
            "itemtype": "method",
            "name": "getFPS",
            "return": {
                "description": "Return the current FPS.",
                "type": "Number"
            },
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 15,
            "description": "Gets PI value.",
            "itemtype": "attribute",
            "name": "Pi",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 23,
            "description": "Gets PI over 2 value.",
            "itemtype": "attribute",
            "name": "PiOver2",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 31,
            "description": "Gets PI over 4 value.",
            "itemtype": "attribute",
            "name": "PiOver4",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 39,
            "description": "Gets PI * 2 value.",
            "itemtype": "attribute",
            "name": "TwoPi",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 47,
            "itemtype": "method",
            "name": "clamp",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 57,
            "itemtype": "method",
            "name": "distance",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 65,
            "itemtype": "method",
            "name": "lerp",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 75,
            "itemtype": "method",
            "name": "toDegrees",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 83,
            "itemtype": "method",
            "name": "toRadians",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 91,
            "itemtype": "method",
            "name": "isPowerOfTwo",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 33,
            "description": "Set all values of the matrix.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "values",
                    "description": "An array of 16 values who start at M11 and stop at M44",
                    "type": "Array"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 47,
            "description": "Gets identity value for push it into matrix.",
            "itemtype": "method",
            "name": "getIdentityValues",
            "return": {
                "description": "Return an array that correspond of identity matrix.",
                "type": "Array"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 62,
            "description": "Gets an array of values setted to 0.",
            "itemtype": "method",
            "name": "getZeroValues",
            "return": {
                "description": "Return an array with 0.",
                "type": "Array"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 75,
            "description": "Sets the matrix to identity.",
            "itemtype": "method",
            "name": "setIdentity",
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 83,
            "description": "Gets an identity matrix.",
            "itemtype": "method",
            "name": "getMatrixIdentity",
            "static": 1,
            "return": {
                "description": "Return an identity matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 95,
            "description": "Gets values of matrix in array. Start at M11 to M44.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "An array of values.",
                "type": "Array"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 121,
            "description": "Sets the left of the matrix.",
            "itemtype": "method",
            "name": "setLeft",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to use.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 132,
            "description": "Gets the left of the matrix.",
            "itemtype": "method",
            "name": "getLeft",
            "return": {
                "description": "Return a the left vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 145,
            "description": "Sets the right of the matrix.",
            "itemtype": "method",
            "name": "setRight",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 156,
            "description": "Gets the right of the matrix.",
            "itemtype": "method",
            "name": "getRight",
            "return": {
                "description": "Return a the right vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 169,
            "description": "Sets the up of the matrix.",
            "itemtype": "method",
            "name": "setUp",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 180,
            "description": "Gets the up of the matrix.",
            "itemtype": "method",
            "name": "getUp",
            "return": {
                "description": "Return a the up vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 193,
            "description": "Sets the down of the matrix.",
            "itemtype": "method",
            "name": "setDown",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 204,
            "description": "Gets the down of the matrix.",
            "itemtype": "method",
            "name": "getDown",
            "return": {
                "description": "Return a the down vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 217,
            "description": "Sets the backward of the matrix.",
            "itemtype": "method",
            "name": "setBackward",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 228,
            "description": "Gets the backward of the matrix.",
            "itemtype": "method",
            "name": "getBackward",
            "return": {
                "description": "Return a the backward vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 241,
            "description": "Sets the forward of the matrix.",
            "itemtype": "method",
            "name": "setForward",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 252,
            "description": "Gets the forward of the matrix.",
            "itemtype": "method",
            "name": "getForward",
            "return": {
                "description": "Return a the forward vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 265,
            "description": "Sets translation.",
            "itemtype": "method",
            "name": "setTranslation",
            "params": [
                {
                    "name": "position",
                    "description": "The position to set.",
                    "type": "Atlantis.Vetor3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 276,
            "description": "Add a matrix to this matrix.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix to add.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 291,
            "description": "Add two matrix.",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "matA",
                    "description": "A matrix",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matB",
                    "description": "Another matrix to add with the first",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "Return a new matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 305,
            "description": "Create a rotation matrix on X axis.",
            "itemtype": "method",
            "name": "createRotationX",
            "static": 1,
            "params": [
                {
                    "name": "rotation",
                    "description": "An angle in radians",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a rotation matrix on X axis.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 324,
            "description": "Create a rotation matrix on Y axis.",
            "itemtype": "method",
            "name": "createRotationY",
            "static": 1,
            "params": [
                {
                    "name": "rotation",
                    "description": "An angle in radians",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a rotation matrix on Y axis.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 343,
            "description": "Create a rotation matrix on Z axis.",
            "itemtype": "method",
            "name": "createRotationX",
            "static": 1,
            "params": [
                {
                    "name": "rotation",
                    "description": "An angle in radians",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a rotation matrix on Z axis.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 364,
            "description": "Create a scale matrix.",
            "itemtype": "method",
            "name": "createScale",
            "static": 1,
            "params": [
                {
                    "name": "sx",
                    "description": "Desired scale on X axis.",
                    "type": "Number"
                },
                {
                    "name": "sy",
                    "description": "Desired scale on Y axis.",
                    "type": "Number"
                },
                {
                    "name": "sz",
                    "description": "Desired scale on Z axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a scale matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 381,
            "description": "Create a translation matrix.",
            "itemtype": "method",
            "name": "createTranslation",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "Position on X axis."
                },
                {
                    "name": "y",
                    "description": "Position on Y axis."
                },
                {
                    "name": "z",
                    "description": "Position on Z axis."
                }
            ],
            "return": {
                "description": "Return a matrix translation."
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 398,
            "description": "Create a view matrix.",
            "metod": "createLookAt",
            "static": 1,
            "params": [
                {
                    "name": "position",
                    "description": "The position of the camera.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "Atlantis.Vector3}",
                    "description": "target The target of the camera."
                },
                {
                    "name": "Atlantis.Vector3}",
                    "description": "upVector Vector up"
                }
            ],
            "return": {
                "description": "Return a view camera.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 436,
            "description": "Create an orthogonal projection matrix.",
            "itemtype": "method",
            "name": "createOrthograhic",
            "static": 1,
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "zNear",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "zFar",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 460,
            "description": "Create a customized orthogonal projection matrix.",
            "itemtype": "method",
            "name": "createOrthographicOffCenter",
            "static": 1,
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "zNear",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "zFar",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 491,
            "description": "Create a perspective field of view matrix with Left hand notation.",
            "itemtype": "method",
            "name": "createPerspectiveFieldOfView",
            "static": 1,
            "params": [
                {
                    "name": "fov",
                    "description": "Desired field of view (Math.PI / 4 is a good value)",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "Desired aspect ratio (Screen width / height)",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "Near clip",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "Far clip",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a matrix of this type of perspective.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 510,
            "description": "Create a perspective field of view matrix with Right hand notation.",
            "itemtype": "method",
            "name": "createPerspectiveFieldOfViewRH",
            "static": 1,
            "params": [
                {
                    "name": "fov",
                    "description": "Desired field of view (Math.PI / 4 is a good value)",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "Desired aspect ratio (Screen width / height)",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "Near clip",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "Far clip",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a matrix of this type of perspective.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 529,
            "description": "Create a custom perspective matrix.",
            "itemtype": "method",
            "name": "createPerspectiveOffCenter",
            "static": 1,
            "params": [
                {
                    "name": "left",
                    "description": "Minimum X value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "Maximum X value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "Minimum Y value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "Maximum Y value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "zNear",
                    "description": "Minimum Z value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "zFar",
                    "description": "Maximum Z value of the viewing volume.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a new custom perspective matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 554,
            "description": "Create a custom perspective matrix (Right hand).",
            "itemtype": "method",
            "name": "createPerspectiveOffCenter",
            "static": 1,
            "params": [
                {
                    "name": "left",
                    "description": "Minimum X value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "Maximum X value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "Minimum Y value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "Maximum Y value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "zNear",
                    "description": "Minimum Z value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "zFar",
                    "description": "Maximum Z value of the viewing volume.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a new custom perspective matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 575,
            "description": "Invert the current Matrix.",
            "itemtype": "method",
            "name": "invert",
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 629,
            "description": "Calculate the inverse of the specified matrix.",
            "itemtype": "method",
            "name": "invert",
            "static": 1,
            "params": [
                {
                    "name": "matrix",
                    "description": "The matrix to use."
                }
            ],
            "return": {
                "description": "Return the inverse of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 642,
            "description": "Create a world matrix.",
            "itemtype": "method",
            "name": "createWorld",
            "static": 1,
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "forward",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "upVector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a world matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 669,
            "description": "Multiply this matrix by another matrix.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix to multiply.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 710,
            "description": "Multiply a two matrix.",
            "itemtype": "method",
            "name": "multiply",
            "static": 1,
            "params": [
                {
                    "name": "matrixA",
                    "description": "A matrix.",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matrixB",
                    "description": "Another matrix.",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matrixC",
                    "description": "Another matrix (optional).",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "Return a new matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 730,
            "description": "Subtract a matrix to this matrix.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix to add.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 745,
            "description": "Subtract two matrix.",
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "matA",
                    "description": "A matrix.",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matB",
                    "description": "Another matrix to use to subtract with the first matrix.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "Return a new matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 759,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Preloader.js",
            "line": 31,
            "description": "Called when an asset is loaded.",
            "itemtype": "method",
            "name": "onProgress",
            "params": [
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "Object"
                },
                {
                    "name": "progress",
                    "description": "The loading progression in percent.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Preloader",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 35,
            "description": "Gets an Quaternion sets to identity.",
            "itemtype": "method",
            "name": "Identity",
            "return": {
                "description": "Return a new Quaternion sets to identity.",
                "type": "Atlantis.Quaternion"
            },
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 44,
            "description": "Add a Quaternion to this quaternion.",
            "itemtype": "method",
            "name": "add",
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 55,
            "description": "Add two quaternions.",
            "itemtype": "method",
            "name": "{Atlantis.Quaternion} quaternion1",
            "static": 1,
            "type": "Atlantis.Quaternion",
            "return": {
                "description": "Return a new quaternion.",
                "type": "Atlantis.Quaternion"
            },
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 69,
            "description": "Conjugate the Quaternion.",
            "itemtype": "method",
            "name": "conjugate",
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 79,
            "description": "Gets a quaternion who's the conjugate of the quaternion passed to parameter.",
            "itemtype": "method",
            "name": "conjugate",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "quaterion to conjugate.",
                    "type": "Atlantis.Quaternion"
                }
            ],
            "return": {
                "description": "Return a new conjugate Quaternion.",
                "type": "Atlantis.Quaternion"
            },
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 92,
            "description": "Create a quaternion with three rotations",
            "params": [
                {
                    "name": "yaw",
                    "description": "Value of yaw rotation (Y)"
                },
                {
                    "name": "pitch",
                    "description": "Value of pitch rotation (X)"
                },
                {
                    "name": "roll",
                    "description": "Value of roll rotation (Z)"
                }
            ],
            "return": {
                "description": "Return a quaternion with three rotations."
            },
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Quaternion.js",
            "line": 121,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Quaternion",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 35,
            "description": "Add a rectangle to this rectangle.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "rectangle",
                    "description": "The rectangle to add.",
                    "type": "Atlantis.Rectangle"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 47,
            "description": "Divide a rectangle to this rectangle.",
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "rectangle",
                    "description": "The rectangle to divide.",
                    "type": "Atlantis.Rectangle"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 59,
            "description": "Multiply a rectangle to this rectangle.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "rectangle",
                    "description": "The rectangle to multiply.",
                    "type": "Atlantis.Rectangle"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 71,
            "description": "Subtract a rectangle to this rectangle.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "rectangle",
                    "description": "The rectangle to subtract.",
                    "type": "Atlantis.Rectangle"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 83,
            "description": "Determine if a Rectangle, Point or coordinates are contains in rectangle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "X",
                    "description": "coordinate or an instance of Point or an instance of Rectangle.",
                    "type": "Number|Point|Rectangle"
                },
                {
                    "name": "Y",
                    "description": "coordinate.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 98,
            "itemtype": "method",
            "name": "contains",
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 110,
            "description": "gets the position.",
            "return": {
                "description": "The position."
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 118,
            "description": "Gets the position.",
            "return": {
                "description": "The position."
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 130,
            "description": "Gets the top value.",
            "itemtype": "method",
            "name": "getTop",
            "return": {
                "description": "Top coordinate (y)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 139,
            "description": "Gets the bottom value.",
            "itemtype": "method",
            "name": "getBottom",
            "return": {
                "description": "Bottom coordinate (y + height)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 148,
            "description": "Gets the left value.",
            "itemtype": "method",
            "name": "getLeft",
            "return": {
                "description": "Left coordinate (x)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 157,
            "description": "Gets the right value.",
            "itemtype": "method",
            "name": "getRight",
            "return": {
                "description": "Right value (x + width)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 166,
            "description": "Gets the center of the rectangle.",
            "itemtype": "method",
            "name": "getCenter",
            "return": {
                "description": "A point of the center of the rectangle.",
                "type": "Atlantis.Point"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 176,
            "description": "Gets width",
            "return": {
                "description": "Return the with.",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 184,
            "description": "Gets height",
            "return": {
                "description": "Return the height",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 192,
            "description": "Gets the top center.",
            "return": {
                "description": "The top center of the rectangle",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 200,
            "description": "Gets the bottom center.",
            "return": {
                "description": "The bottom center.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 208,
            "description": "Gets the left center.",
            "return": {
                "description": "The left center.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 216,
            "description": "Gets the right center.",
            "return": {
                "description": "The right center.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 224,
            "description": "Sets values to rectangle.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 246,
            "description": "Sets the position of the rectangle",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number|Altantis.Vector2|Atlantis.Point"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 256,
            "description": "Sets the size of the rectangle.",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 266,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 29,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Point",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 54,
            "description": "Gets a Vector3 with all coordinates sets to zero.",
            "itemtype": "method",
            "name": "Zero",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 62,
            "description": "Gets a Vector3 with all coordinates sets to one.",
            "itemtype": "method",
            "name": "One",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 70,
            "description": "Gets a Vector3 with X coordinate set to one.",
            "itemtype": "method",
            "name": "UnitX",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 78,
            "description": "Gets a Vector3 with Y coordinate set to one.",
            "itemtype": "method",
            "name": "UnitY",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 86,
            "description": "Add this vector by another vector or value.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to add to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 102,
            "description": "Add two vectors.",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 115,
            "description": "Substract this vector by another vector or value.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to subtract to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 131,
            "description": "Subtract two vectors.",
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 144,
            "description": "Divide this vector by another vector",
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to divide to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 160,
            "description": "Divide two vectors.",
            "itemtype": "method",
            "name": "divide",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 173,
            "description": "Multiply this vector by another vector or a value.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to multiply to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 189,
            "description": "Multiply two vectors.",
            "itemtype": "method",
            "name": "multiply",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 202,
            "description": "Gets distance between this vector and the vector passed in parameter.",
            "itemtype": "method",
            "name": "getDistance",
            "params": [
                {
                    "name": "vector2",
                    "description": "The vector2 to use to determine the distance.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "The distance between this vector and the vector passed in parameter.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 214,
            "description": "Gets the distance between two vectors.",
            "itemtype": "method",
            "name": "distance",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 226,
            "description": "Gets distance between this vector and the vector passed in parameter.",
            "itemtype": "method",
            "name": "getDistance",
            "params": [
                {
                    "name": "vector2",
                    "description": "The vector2 to use to determine the distance.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "The distance between this vector and the vector passed in parameter.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 238,
            "description": "Calculate the dot product of two vectors.",
            "itemtype": "method",
            "name": "dot",
            "static": 1,
            "params": [
                {
                    "name": "First",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Second",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "Return the dot product of the two vectors.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 250,
            "description": "Gets the length of the vector.",
            "return": {
                "description": "Return the length of the vector.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 258,
            "description": "Performs a linear interpolation between to vectors.",
            "itemtype": "method",
            "name": "lerp",
            "static": 1,
            "params": [
                {
                    "name": "First",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Second",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "amount",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 271,
            "description": "Gets a vector of the minimum of the two vectors.",
            "itemtype": "method",
            "name": "min",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": ""
                },
                {
                    "name": "vec2",
                    "description": ""
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the minimum of the two vectors."
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 286,
            "description": "Gets a vector of the maximum of the two vectors.",
            "itemtype": "method",
            "name": "max",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": ""
                },
                {
                    "name": "vec2",
                    "description": ""
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the maximum of the two vectors."
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 301,
            "description": "Negate this vector",
            "itemtype": "method",
            "name": "negate",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 316,
            "description": "Negate a vector.",
            "itemtype": "method",
            "name": "negate",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "Return the negated vector.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 330,
            "description": "Normalize this vector.",
            "itemtype": "method",
            "name": "normalize",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 343,
            "itemtype": "method",
            "name": "normalize",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector to normalize.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 355,
            "description": "Gets a transformed Vector3 from a position and a matrix.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "A tranformed vector.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 372,
            "description": "Gets a transformed Vector3 from a position and a matrix.",
            "itemtype": "method",
            "name": "transformCoordinate",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "A tranformed vector.",
                "type": "Atlantis.Vector4"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 388,
            "description": "Sets the coordinates.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "X",
                    "description": "value.",
                    "type": "Number"
                },
                {
                    "name": "Y",
                    "description": "value.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 399,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 32,
            "description": "Gets a Vector3 with all coordinates sets to zero.",
            "itemtype": "method",
            "name": "Zero",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 40,
            "description": "Gets a Vector3 with all coordinates sets to one.",
            "itemtype": "method",
            "name": "One",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 48,
            "description": "Gets a Vector3 with X coordinate set to one.",
            "itemtype": "method",
            "name": "UnitX",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 56,
            "description": "Gets a Vector3 with Y coordinate set to one.",
            "itemtype": "method",
            "name": "UnitY",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 64,
            "description": "Gets a Vector3 with Z coordinate set to one.",
            "itemtype": "method",
            "name": "UnitZ",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 72,
            "description": "Gets a Vector3 with Y coordinate set to one.",
            "itemtype": "method",
            "name": "Up",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 80,
            "description": "Gets a Vector3 with Y coordinate set to -1.",
            "itemtype": "method",
            "name": "Down",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 88,
            "description": "Gets a Vector3 with X coordinate set to one.",
            "itemtype": "method",
            "name": "Right",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 96,
            "description": "Gets a Vector3 with X coordinate set to -1.",
            "itemtype": "method",
            "name": "Left",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 104,
            "description": "Gets a Vector3 with Z coordinate set to -1.",
            "itemtype": "method",
            "name": "Forward",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 112,
            "description": "Gets a Vector3 with Z coordinate set to one.",
            "itemtype": "method",
            "name": "Backward",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 120,
            "description": "Add a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to add.",
                    "type": "Number|Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 138,
            "description": "Add two vectors.",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a new Vector3",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 152,
            "description": "Subtract a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to Subtract.",
                    "type": "Number|Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 170,
            "description": "Subtract two vectors.",
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a news Vector3.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 184,
            "description": "divide a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to divide.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 201,
            "description": "Divide two vectors.",
            "itemtype": "method",
            "name": "divide",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a new Vector3.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 215,
            "description": "multiply a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to multiply.",
                    "type": "Number|Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 233,
            "description": "Multiply a two vectors.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a new vector.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 246,
            "description": "Calculates the cross products of two vectors.",
            "itemtype": "method",
            "name": "cross",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "Fist vector to use.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "Second vector to use.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "the cross products of the two vectors.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 262,
            "description": "Gets the distance between two vectors.",
            "itemtype": "method",
            "name": "distance",
            "static": 1,
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return the distance between two vectors.",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 273,
            "description": "Gets the distance squared between to vectors.",
            "itemtype": "method",
            "name": "distanceSquared",
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 287,
            "description": "Calculates the dot product of two vectors.",
            "itemtype": "method",
            "name": "dot",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "First vector to use.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "Second vector to use.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return the dot product of two vectors.",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 299,
            "description": "Gets the length of the vector.",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "Return the length of the vector.",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 308,
            "description": "Linear interpolation between this vector and the vector passed in parameter.",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to use for interpolation",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vector.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 320,
            "description": "Linearly interpolates between two vectors.",
            "itemtype": "method",
            "name": "lerp",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "First vector",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "Second vector",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vec2."
                }
            ],
            "return": {
                "description": "Return a interpolated Vector3.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 336,
            "description": "Gets a vector of the minimum of the two vectors.",
            "itemtype": "method",
            "name": "min",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the minimum of the two vectors.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 352,
            "description": "Gets a vector of the maximum of the two vectors.",
            "itemtype": "method",
            "name": "max",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the maximum of the two vectors.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 368,
            "description": "Negate the vector.",
            "itemtype": "method",
            "name": "negate",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 378,
            "description": "Negate a vector.",
            "itemtype": "method",
            "name": "negate",
            "static": 1,
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to negate.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a negated vector.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 391,
            "description": "Normalize vector.",
            "static": 1,
            "itemtype": "method",
            "name": "normalize",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 405,
            "description": "Normalize a vector.",
            "itemtype": "method",
            "name": "normalize",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to normalize.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "result A normalized vector.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 417,
            "description": "Gets a transformed Vector3 from a position and a matrix.",
            "itemtype": "method",
            "name": "tranform",
            "static": 1,
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "A tranformed vector.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 435,
            "description": "Gets an homogeneous transformed vector from a position and a matrix.",
            "itemtype": "method",
            "name": "transformCoordinate",
            "static": 1,
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "A tranformed vector.",
                "type": "Atlantis.Vector4"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 452,
            "description": "Changes the 3 coordinates.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "x",
                    "description": "The new X coordinate."
                },
                {
                    "name": "y",
                    "description": "The new Y coordinate."
                },
                {
                    "name": "z",
                    "description": "The new Z coordinate."
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 465,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector4.js",
            "line": 35,
            "description": "Linear interpolation.",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to use for interpolation",
                    "type": "Atlantis.Vector4"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vector.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Vector4",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector4.js",
            "line": 48,
            "description": "Linearly interpolates between two vectors.",
            "itemtype": "method",
            "name": "lerp",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "First vector",
                    "type": "Atlantis.Vector4"
                },
                {
                    "name": "vec2",
                    "description": "Second vector",
                    "type": "Atlantis.Vector4"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vec2.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a interpolated Vector3.",
                "type": "Atlantis.Vector4"
            },
            "class": "Atlantis.Vector4",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector4.js",
            "line": 63,
            "description": "Gets a string from this object.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Atlantis.Vector4",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        }
    ],
    "warnings": [
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:238"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:238"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:255"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:255"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:255"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:269"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:381"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:381"
        },
        {
            "message": "param name missing: {Atlantis.SpriteBatch}",
            "line": " Engine\\Graphics\\SpriteGroup.js:96"
        },
        {
            "message": "unknown tag: methode",
            "line": " Engine\\Graphics\\SpriteGroup.js:362"
        },
        {
            "message": "unknown tag: exemple",
            "line": " Framework\\Common.js:16"
        },
        {
            "message": "param name missing: {Atlantis.Matrix|Array}",
            "line": " Framework\\Matrix.js:11"
        },
        {
            "message": "unknown tag: metod",
            "line": " Framework\\Matrix.js:398"
        },
        {
            "message": "Missing item type\nReplace a sprite by another.",
            "line": " Engine\\Graphics\\SpriteGroup.js:362"
        },
        {
            "message": "Missing item type",
            "line": " Framework\\Game.js:144"
        },
        {
            "message": "Missing item type\nCreate a collection of game components.",
            "line": " Framework\\GameComponent.js:138"
        },
        {
            "message": "Missing item type\nCreate a view matrix.",
            "line": " Framework\\Matrix.js:398"
        },
        {
            "message": "Missing item type\nCreate a quaternion with three rotations",
            "line": " Framework\\Quaternion.js:92"
        },
        {
            "message": "Missing item type\ngets the position.",
            "line": " Framework\\Rectangle.js:110"
        },
        {
            "message": "Missing item type\nGets the position.",
            "line": " Framework\\Rectangle.js:118"
        },
        {
            "message": "Missing item type\nGets width",
            "line": " Framework\\Rectangle.js:176"
        },
        {
            "message": "Missing item type\nGets height",
            "line": " Framework\\Rectangle.js:184"
        },
        {
            "message": "Missing item type\nGets the top center.",
            "line": " Framework\\Rectangle.js:192"
        },
        {
            "message": "Missing item type\nGets the bottom center.",
            "line": " Framework\\Rectangle.js:200"
        },
        {
            "message": "Missing item type\nGets the left center.",
            "line": " Framework\\Rectangle.js:208"
        },
        {
            "message": "Missing item type\nGets the right center.",
            "line": " Framework\\Rectangle.js:216"
        },
        {
            "message": "Missing item type\nSets values to rectangle.",
            "line": " Framework\\Rectangle.js:224"
        },
        {
            "message": "Missing item type\nSets the position of the rectangle",
            "line": " Framework\\Rectangle.js:246"
        },
        {
            "message": "Missing item type\nSets the size of the rectangle.",
            "line": " Framework\\Rectangle.js:256"
        },
        {
            "message": "Missing item type\nGets the length of the vector.",
            "line": " Framework\\Vector2.js:250"
        }
    ]
}