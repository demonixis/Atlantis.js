{
    "project": {
        "name": "AtlantisEngine.js",
        "description": "A lightweight 2D game engine in JavaScript using Canvas 2D",
        "version": "0.0.2",
        "url": "http://blog.demonixis.net"
    },
    "files": {
        "Engine\\Graphics\\Animation.js": {
            "name": "Engine\\Graphics\\Animation.js",
            "modules": {
                "Engine": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\Entity.js": {
            "name": "Engine\\Graphics\\Entity.js",
            "modules": {},
            "classes": {
                "Atlantis.Entity": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\Sprite.js": {
            "name": "Engine\\Graphics\\Sprite.js",
            "modules": {},
            "classes": {
                "Atlantis.Sprite": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Graphics\\SpriteGroup.js": {
            "name": "Engine\\Graphics\\SpriteGroup.js",
            "modules": {},
            "classes": {
                "Atlantis.SpriteGroup": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\AudioManager.js": {
            "name": "Engine\\AudioManager.js",
            "modules": {},
            "classes": {
                "Atlantis.AudioManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\GameApplication.js": {
            "name": "Engine\\GameApplication.js",
            "modules": {},
            "classes": {
                "Atlantis.Engine": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\Interpolator.js": {
            "name": "Engine\\Interpolator.js",
            "modules": {},
            "classes": {
                "Atlantis.Interpolator": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\StateManager.js": {
            "name": "Engine\\StateManager.js",
            "modules": {},
            "classes": {
                "Atlantis.State": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Engine\\StorageManager.js": {
            "name": "Engine\\StorageManager.js",
            "modules": {},
            "classes": {
                "Atlantis.StorageManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Input\\KeyboardManager.js": {
            "name": "Framework\\Input\\KeyboardManager.js",
            "modules": {
                "Framework": 1
            },
            "classes": {
                "Atlantis.Input.KeyboardState": 1,
                "Atlantis.Input.KeyboardManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis.Input": 1
            }
        },
        "Framework\\Input\\PointerManager.js": {
            "name": "Framework\\Input\\PointerManager.js",
            "modules": {},
            "classes": {
                "Atlantis.Input.PointerManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis.Input": 1
            }
        },
        "Framework\\Compatibility.js": {
            "name": "Framework\\Compatibility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\ContentManager.js": {
            "name": "Framework\\ContentManager.js",
            "modules": {},
            "classes": {
                "Atlantis.ContentManager": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Game.js": {
            "name": "Framework\\Game.js",
            "modules": {},
            "classes": {
                "Atlantis.GameTime": 1,
                "Atlantis.Game": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\GameComponent.js": {
            "name": "Framework\\GameComponent.js",
            "modules": {},
            "classes": {
                "Atlantis.GameComponent": 1,
                "Atlantis.DrawableGameComponent": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Graphics.js": {
            "name": "Framework\\Graphics.js",
            "modules": {},
            "classes": {
                "Atlantis.Graphics": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Helpers.js": {
            "name": "Framework\\Helpers.js",
            "modules": {},
            "classes": {
                "Atlantis.Helpers": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\MathHelper.js": {
            "name": "Framework\\MathHelper.js",
            "modules": {},
            "classes": {
                "Atlantis.MathHelpers": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Matrix.js": {
            "name": "Framework\\Matrix.js",
            "modules": {},
            "classes": {
                "Atlantis.Matrix": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Quaternion.js": {
            "name": "Framework\\Quaternion.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Rectangle.js": {
            "name": "Framework\\Rectangle.js",
            "modules": {},
            "classes": {
                "Atlantis.Point": 1,
                "Atlantis.Rectangle": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Vector2.js": {
            "name": "Framework\\Vector2.js",
            "modules": {},
            "classes": {
                "Atlantis.Vector2": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Vector3.js": {
            "name": "Framework\\Vector3.js",
            "modules": {},
            "classes": {
                "Atlantis.Vector3": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        },
        "Framework\\Vector4.js": {
            "name": "Framework\\Vector4.js",
            "modules": {},
            "classes": {
                "Atlantis.Vector4": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1
            }
        }
    },
    "modules": {
        "Atlantis": {
            "name": "Atlantis",
            "submodules": {
                "Engine": 1,
                "Framework": 1
            },
            "classes": {
                "Atlantis.Entity": 1,
                "Atlantis.Sprite": 1,
                "Atlantis.SpriteGroup": 1,
                "Atlantis.AudioManager": 1,
                "Atlantis.Engine": 1,
                "Atlantis.Interpolator": 1,
                "Atlantis.State": 1,
                "Atlantis.StorageManager": 1,
                "Atlantis.Input.KeyboardState": 1,
                "Atlantis.Input.KeyboardManager": 1,
                "Atlantis.Input.PointerManager": 1,
                "Atlantis.ContentManager": 1,
                "Atlantis.GameTime": 1,
                "Atlantis.Game": 1,
                "Atlantis.GameComponent": 1,
                "Atlantis.DrawableGameComponent": 1,
                "Atlantis.Graphics": 1,
                "Atlantis.Helpers": 1,
                "Atlantis.MathHelpers": 1,
                "Atlantis.Matrix": 1,
                "Atlantis.Point": 1,
                "Atlantis.Rectangle": 1,
                "Atlantis.Vector2": 1,
                "Atlantis.Vector3": 1,
                "Atlantis.Vector4": 1
            },
            "fors": {},
            "namespaces": {
                "Atlantis": 1,
                "Atlantis.Input": 1
            },
            "file": "Framework\\Vector4.js",
            "line": 12
        },
        "Engine": {
            "name": "Engine",
            "submodules": {},
            "classes": {
                "Atlantis.Entity": 1,
                "Atlantis.Sprite": 1,
                "Atlantis.SpriteGroup": 1,
                "Atlantis.AudioManager": 1,
                "Atlantis.Engine": 1,
                "Atlantis.Interpolator": 1,
                "Atlantis.State": 1,
                "Atlantis.StorageManager": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "Atlantis": 1
            },
            "module": "Atlantis",
            "namespace": "",
            "file": "Engine\\StorageManager.js",
            "line": 12,
            "description": "AtlantisEngine.js a lightweight JavaScript game engine."
        },
        "Framework": {
            "name": "Framework",
            "submodules": {},
            "classes": {
                "Atlantis.Input.KeyboardState": 1,
                "Atlantis.Input.KeyboardManager": 1,
                "Atlantis.Input.PointerManager": 1,
                "Atlantis.ContentManager": 1,
                "Atlantis.GameTime": 1,
                "Atlantis.Game": 1,
                "Atlantis.GameComponent": 1,
                "Atlantis.DrawableGameComponent": 1,
                "Atlantis.Graphics": 1,
                "Atlantis.Helpers": 1,
                "Atlantis.MathHelpers": 1,
                "Atlantis.Matrix": 1,
                "Atlantis.Point": 1,
                "Atlantis.Rectangle": 1,
                "Atlantis.Vector2": 1,
                "Atlantis.Vector3": 1,
                "Atlantis.Vector4": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "Atlantis.Input": 1,
                "Atlantis": 1
            },
            "module": "Atlantis",
            "namespace": "",
            "file": "Framework\\Vector4.js",
            "line": 12,
            "description": "AtlantisEngine.js a lightweight JavaScript game engine."
        }
    },
    "classes": {
        "Atlantis.Entity": {
            "name": "Atlantis.Entity",
            "shortname": "Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Entity.js",
            "line": 12,
            "description": "A basic entity",
            "is_constructor": 1
        },
        "Atlantis.Sprite": {
            "name": "Atlantis.Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 12,
            "description": "A sprite entity",
            "is_constructor": 1
        },
        "Atlantis.SpriteGroup": {
            "name": "Atlantis.SpriteGroup",
            "shortname": "SpriteGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 12,
            "description": "A collection that initialize, load, update and draw entities.",
            "is_constructor": 1
        },
        "Atlantis.AudioManager": {
            "name": "Atlantis.AudioManager",
            "shortname": "AudioManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\AudioManager.js",
            "line": 18,
            "description": "An audio manager to play sound and musics.",
            "is_constructor": 1
        },
        "Atlantis.Engine": {
            "name": "Atlantis.Engine",
            "shortname": "Engine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\GameApplication.js",
            "line": 26,
            "description": "The engine class that initialize an Atlantis.Game object and setup managers and scene.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "Desired screen width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Desired screen height",
                    "type": "Number"
                },
                {
                    "name": "domElement",
                    "description": "The DOM element to use for canvas (optional).",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Interpolator": {
            "name": "Atlantis.Interpolator",
            "shortname": "Interpolator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\Interpolator.js",
            "line": 12,
            "description": "An interpolator class that can be used for animations.",
            "is_constructor": 1
        },
        "Atlantis.State": {
            "name": "Atlantis.State",
            "shortname": "State",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\StateManager.js",
            "line": 12,
            "description": "Define a base state class that contains a basic scene.",
            "is_constructor": 1
        },
        "Atlantis.StorageManager": {
            "name": "Atlantis.StorageManager",
            "shortname": "StorageManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis",
            "file": "Engine\\StorageManager.js",
            "line": 12,
            "description": "A storage manager that work with localStorage",
            "is_constructor": 1
        },
        "Atlantis.Input.KeyboardState": {
            "name": "Atlantis.Input.KeyboardState",
            "shortname": "KeyboardState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input",
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 22,
            "description": "Define a keyboard state.",
            "is_constructor": 1
        },
        "Atlantis.Input.KeyboardManager": {
            "name": "Atlantis.Input.KeyboardManager",
            "shortname": "KeyboardManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input",
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 55,
            "description": "A keyboard input manager.",
            "is_constructor": 1
        },
        "Atlantis.Input.PointerManager": {
            "name": "Atlantis.Input.PointerManager",
            "shortname": "PointerManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input",
            "file": "Framework\\Input\\PointerManager.js",
            "line": 15,
            "description": "PointerManager is an abstraction of click event and touch event.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "DOM element to use for event detection.",
                    "type": "DOMElement"
                }
            ]
        },
        "Atlantis.ContentManager": {
            "name": "Atlantis.ContentManager",
            "shortname": "ContentManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\ContentManager.js",
            "line": 12,
            "description": "Create a content manager that manage assets.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "rootDirectory",
                    "description": "The root folder to load assets (default is the current folder).",
                    "type": "String"
                }
            ]
        },
        "Atlantis.GameTime": {
            "name": "Atlantis.GameTime",
            "shortname": "GameTime",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Game.js",
            "line": 12,
            "description": "Create a game time object who's responsible to get time informations.",
            "is_constructor": 1
        },
        "Atlantis.Game": {
            "name": "Atlantis.Game",
            "shortname": "Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Game.js",
            "line": 52,
            "description": "Create a game instance who is the starting point of the Framework.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "width",
                    "description": "Desired screen width.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Desired screen height.",
                    "type": "Height"
                },
                {
                    "name": "(optional)",
                    "description": "domElement Sepecify a DOM element to attach the canvas.",
                    "type": "DomElement"
                },
                {
                    "name": "(optional)",
                    "description": "params",
                    "type": "Params"
                }
            ]
        },
        "Atlantis.GameComponent": {
            "name": "Atlantis.GameComponent",
            "shortname": "GameComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\GameComponent.js",
            "line": 15,
            "description": "Create a game component.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "A game instance.",
                    "type": "Atlantis.Game"
                }
            ]
        },
        "Atlantis.DrawableGameComponent": {
            "name": "Atlantis.DrawableGameComponent",
            "shortname": "DrawableGameComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\GameComponent.js",
            "line": 66,
            "description": "Create a drawable game component.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "game",
                    "description": "A game instance.",
                    "type": "Atlantis.Game"
                }
            ]
        },
        "Atlantis.Graphics": {
            "name": "Atlantis.Graphics",
            "shortname": "Graphics",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Graphics.js",
            "line": 13
        },
        "Atlantis.Helpers": {
            "name": "Atlantis.Helpers",
            "shortname": "Helpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Helpers.js",
            "line": 11
        },
        "Atlantis.MathHelpers": {
            "name": "Atlantis.MathHelpers",
            "shortname": "MathHelpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\MathHelper.js",
            "line": 13
        },
        "Atlantis.Matrix": {
            "name": "Atlantis.Matrix",
            "shortname": "Matrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Matrix.js",
            "line": 12,
            "description": "Create a matrix. Parameter can be a matrix, an array of 16 floats or nothing (all fields case are sets to 0).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Atlantis.Matrix|Array"
                }
            ]
        },
        "Atlantis.Point": {
            "name": "Atlantis.Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Rectangle.js",
            "line": 15,
            "description": "Create a point structure.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "A value for X coordinate.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "A value for Y coordinate.",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Rectangle": {
            "name": "Atlantis.Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Rectangle.js",
            "line": 41,
            "description": "Create a rectangle structure.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "A value for X coordinate.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "A value for Y coordinate.",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "A value for the width of the rectangle.",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "A value for the height of the rectangle",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Vector2": {
            "name": "Atlantis.Vector2",
            "shortname": "Vector2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector2.js",
            "line": 15,
            "description": "Create a new Vector2",
            "is_constructor": 1
        },
        "Atlantis.Vector3": {
            "name": "Atlantis.Vector3",
            "shortname": "Vector3",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector3.js",
            "line": 12,
            "description": "Create a vector with three coordinates. If you pass a Vector3 in first parameter,\nits filed are copied to the new vector (work like a copy constructor).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "The",
                    "description": "X value or a Vector3 object     * @param {Number} The Y value.",
                    "type": "Number|Atlantis.Vector3"
                },
                {
                    "name": "The",
                    "description": "Z value.",
                    "type": "Number"
                }
            ]
        },
        "Atlantis.Vector4": {
            "name": "Atlantis.Vector4",
            "shortname": "Vector4",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis",
            "file": "Framework\\Vector4.js",
            "line": 12,
            "description": "A vector4 class.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "Value",
                    "description": "for x coordinate or a Vector4 object.",
                    "type": "Number|Atlantis.Vector4"
                },
                {
                    "name": "Value",
                    "description": "for y coordinate",
                    "type": "Number"
                },
                {
                    "name": "Value",
                    "description": "for z coordinate.",
                    "type": "Number"
                },
                {
                    "name": "Value",
                    "description": "for w coordinate.",
                    "type": "Number"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 27,
            "itemtype": "method",
            "name": "next",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 67,
            "itemtype": "method",
            "name": "initialize",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 87,
            "itemtype": "method",
            "name": "add",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Animation.js",
            "line": 133,
            "itemtype": "method",
            "name": "update",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 68,
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 74,
            "itemtype": "method",
            "name": "loadContent",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 100,
            "itemtype": "method",
            "name": "update",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 107,
            "itemtype": "method",
            "name": "draw",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 119,
            "itemtype": "method",
            "name": "updateSizes",
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 129,
            "itemtype": "method",
            "name": "setSize",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Entity.js",
            "line": 153,
            "itemtype": "method",
            "name": "setPosition",
            "params": [],
            "class": "Atlantis.Entity",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 50,
            "itemtype": "method",
            "name": "prepareAnimation",
            "params": [],
            "class": "Atlantis.Sprite",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 65,
            "itemtype": "method",
            "name": "addAnimation",
            "params": [],
            "class": "Atlantis.Sprite",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 77,
            "itemtype": "method",
            "name": "play",
            "params": [],
            "class": "Atlantis.Sprite",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 86,
            "itemtype": "method",
            "name": "update",
            "params": [],
            "class": "Atlantis.Sprite",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 118,
            "itemtype": "method",
            "name": "postUpdate",
            "params": [],
            "class": "Atlantis.Sprite",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\Sprite.js",
            "line": 168,
            "itemtype": "method",
            "name": "draw",
            "params": [],
            "class": "Atlantis.Sprite",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 24,
            "description": "Initialize of all members.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 34,
            "description": "Load assets of all members.",
            "itemtype": "method",
            "name": "loadContent",
            "params": [
                {
                    "name": "contentManager",
                    "description": "An instance of ContentManager.",
                    "type": "Atlantis.ContentManager"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 45,
            "description": "Update logic of all members.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 58,
            "description": "Draw all members on screen.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                },
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 72,
            "description": "Add an entity to the group.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to add.",
                    "type": "Atlantis.Entity"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 88,
            "description": "remove an entity from the group.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to remove.",
                    "type": "Atlantis.Entity"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Graphics\\SpriteGroup.js",
            "line": 113,
            "description": "Gets an entity from the group.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the entity on the group.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.SpriteGroup",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 30,
            "description": "Play a music.",
            "itemtype": "method",
            "name": "playMusic",
            "params": [
                {
                    "name": "music",
                    "description": "An HTML Audio Element that contains the music.",
                    "type": "AudioElement"
                },
                {
                    "name": "repeat",
                    "description": "Sets to true for enable repeat.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 44,
            "description": "Stop the current played music.",
            "itemtype": "method",
            "name": "stopMusic",
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\AudioManager.js",
            "line": 52,
            "description": "Pause the current played music.",
            "itemtype": "method",
            "name": "pauseMusic",
            "class": "Atlantis.AudioManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\GameApplication.js",
            "line": 51,
            "description": "Launch the game engine.",
            "itemtype": "method",
            "name": "run",
            "class": "Atlantis.Engine",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Interpolator.js",
            "line": 26,
            "description": "Start the interpolation process.",
            "itemtype": "method",
            "name": "startInterpolation",
            "params": [
                {
                    "name": "start",
                    "description": "The start value.",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "The end value.",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "Desired duration for interpolation.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Interpolator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Interpolator.js",
            "line": 42,
            "description": "Gets the interpolated value.",
            "itemtype": "method",
            "name": "getInterpolatedValue",
            "params": [
                {
                    "name": "elapsedMilliseconds",
                    "description": "The elapsed time since the last call.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "An interpolated value.",
                "type": "Number"
            },
            "class": "Atlantis.Interpolator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Interpolator.js",
            "line": 66,
            "description": "Interplate a value.",
            "itemtype": "method",
            "name": "interpolateValue",
            "params": [
                {
                    "name": "step",
                    "description": "The step.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "An interpolated value.",
                "type": "Number"
            },
            "class": "Atlantis.Interpolator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\Interpolator.js",
            "line": 76,
            "description": "Math function lerp",
            "itemtype": "method",
            "name": "lerp",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Atlantis.Interpolator",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 28,
            "description": "Determine the activity of the state.",
            "itemtype": "method",
            "name": "isActive",
            "return": {
                "description": "Return true if the state is visible and enabled.",
                "type": "Boolean"
            },
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 37,
            "description": "Sets the activity of the state.",
            "itemtype": "method",
            "name": "setActive",
            "params": [
                {
                    "name": "Sets",
                    "description": "to true to active the state.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 47,
            "description": "Initialize logic.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 56,
            "description": "Load assets of entities that compose the scene.",
            "itemtype": "method",
            "name": "loadContent",
            "params": [
                {
                    "name": "contentManager",
                    "description": "An instance of ContentManager.",
                    "type": "Atlantis.ContentManager"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 66,
            "description": "Update logic of scene children.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 75,
            "description": "Draw scene children on screen.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                },
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 85,
            "description": "Add an entity to the scene.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to add.",
                    "type": "Atlantis.Entity"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 94,
            "description": "remove an entity from the scene.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "entity",
                    "description": "The entity to remove.",
                    "type": "Atlantis.Entity"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 103,
            "description": "Gets an entity from the scene.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the entity on the scene.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 137,
            "description": "Load assets of entities that compose the scene.",
            "itemtype": "method",
            "name": "loadContent",
            "params": [
                {
                    "name": "contentManager",
                    "description": "An instance of ContentManager.",
                    "type": "Atlantis.ContentManager"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 149,
            "description": "Update all active state.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 162,
            "description": "Draw all active states.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "gameTime",
                    "description": "An instance of GameTime.",
                    "type": "Atlantis.GameTime"
                },
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 176,
            "description": "Active a state by its name or index.",
            "itemtype": "method",
            "name": "setActive",
            "params": [
                {
                    "name": "stateParam",
                    "description": "Index of the state.",
                    "type": "Number"
                },
                {
                    "name": "stateParam",
                    "description": "Name of the state.",
                    "type": "String"
                },
                {
                    "name": "stateParam",
                    "description": "Instance of thee state.",
                    "type": "Altantis.State"
                },
                {
                    "name": "disableOtherStates",
                    "description": "Sets to true for desactive all other states.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 224,
            "description": "Add a state to the state manager.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "stateParam",
                    "description": "Instance of the state to add.",
                    "type": "Altantis.State"
                },
                {
                    "name": "isActive",
                    "description": "Sets to true for active the state, default is true.",
                    "type": "Boolean"
                },
                {
                    "name": "disableOtherStates",
                    "description": "Sets to true for desactive all other states.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 266,
            "description": "Remove a state by its index, name or instance.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "stateParam",
                    "description": "Index of the state to remove.",
                    "type": "Number"
                },
                {
                    "name": "stateParam",
                    "description": "Name of the state to remove.",
                    "type": "String"
                },
                {
                    "name": "stateParam",
                    "description": "Instance of the state to remove.",
                    "type": "Altantis.State"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StateManager.js",
            "line": 307,
            "description": "Gets a state by its index or its name.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "stateParam",
                    "description": "Index of the state.",
                    "type": "Number"
                },
                {
                    "name": "stateParam",
                    "description": "Name of the state.",
                    "type": "String"
                }
            ],
            "class": "Atlantis.State",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StorageManager.js",
            "line": 21,
            "description": "Save data in the localStorage.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "container",
                    "description": "The localStorage key.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Desired name for the data who'll save.",
                    "type": "String"
                },
                {
                    "name": "or",
                    "description": "{String} data An object to serialize or a serialized object.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.StorageManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StorageManager.js",
            "line": 36,
            "description": "Load data from the localStorage.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "container",
                    "description": "The localStorage key.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Desired name for the data who'll save.",
                    "type": "String"
                },
                {
                    "name": "or",
                    "description": "{String} data An object to serialize or a serialized object.",
                    "type": "Object"
                },
                {
                    "name": "deserializedObject",
                    "description": "Sets to true (default) for deserialize, false to gets the strings stored in localStorage.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The object",
                "type": "Object"
            },
            "class": "Atlantis.StorageManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Engine\\StorageManager.js",
            "line": 56,
            "description": "Gets the localStorage key with a container name and a data name.",
            "itemtype": "method",
            "name": "getLoadStorageKey",
            "params": [
                {
                    "name": "container",
                    "description": "The localStorage key.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Desired name for the data who'll save.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The localStorage final key.",
                "type": "String"
            },
            "class": "Atlantis.StorageManager",
            "module": "Atlantis",
            "submodule": "Engine",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 12,
            "description": "Keys alias",
            "itemtype": "property",
            "name": "Keys",
            "class": "Atlantis.Input.KeyboardState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 31,
            "description": "Determine if the key is pressed.",
            "itemtype": "method",
            "name": "isKeyDown",
            "params": [
                {
                    "name": "button",
                    "description": "The button to test.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return true if the key is pressed.",
                "type": "Boolean"
            },
            "class": "Atlantis.Input.KeyboardState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 41,
            "description": "Determine if the key is pressed.",
            "itemtype": "method",
            "name": "isKeyUp",
            "params": [
                {
                    "name": "button",
                    "description": "The button to test.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return true if the key is released.",
                "type": "Boolean"
            },
            "class": "Atlantis.Input.KeyboardState",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 72,
            "description": "Initialize keyboard event handlers.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.Input.KeyboardManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 81,
            "description": "Gets the current state of the keyboard.",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "Return the state of the keyboard.",
                "type": "Atlantis.KeyboardState"
            },
            "class": "Atlantis.Input.KeyboardManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\KeyboardManager.js",
            "line": 90,
            "description": "Event handler - Function called on keyboard event.",
            "itemtype": "method",
            "name": "onKeyStateChange",
            "params": [
                {
                    "name": "event",
                    "description": "The event object.",
                    "type": "Object"
                },
                {
                    "name": "instance",
                    "description": "The current instance.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.Input.KeyboardManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 38,
            "description": "Start event listening on specified DOM element.",
            "itemtype": "method",
            "name": "startEventListeners",
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 60,
            "description": "Stop event listening on specified DOM element.",
            "itemtype": "method",
            "name": "startEventListeners",
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 82,
            "description": "Event handler responsible to update position and previous position of the pointer.",
            "itemtype": "method",
            "name": "updatePosition",
            "params": [
                {
                    "name": "a",
                    "description": "touch or mouse event.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 96,
            "description": "Event handler responsible to update clicks and touch states.",
            "itemtype": "method",
            "name": "updateClickStates",
            "params": [
                {
                    "name": "a",
                    "description": "touch or mouse event.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 131,
            "description": "Event handler responsive to update clicks/touch and position.",
            "itemtype": "method",
            "name": "updateHandler",
            "params": [
                {
                    "name": "a",
                    "description": "touch or mouse event.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 144,
            "description": "Update the delta.",
            "itemtype": "method",
            "name": "updateDelta",
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\Input\\PointerManager.js",
            "line": 172,
            "description": "Gets the event that correspond of pointer type.",
            "itemtype": "method",
            "name": "getEvent",
            "return": {
                "description": "Return a touch event or a click event",
                "type": "Object"
            },
            "class": "Atlantis.Input.PointerManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis.Input"
        },
        {
            "file": "Framework\\ContentManager.js",
            "line": 23,
            "description": "Load an asset from the root directory.\nSupported formats are :\n     - Images : png, jpg, bmp\n     - Audio : mp3, ogg, wav\n     - Video : mp4, ogv\n     - Data : xml, json, js\n\n The type is define with the file extension.",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "assetName",
                    "description": "The asset name",
                    "type": "String"
                }
            ],
            "class": "Atlantis.ContentManager",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 23,
            "description": "Gets the elapsed time since last frame.",
            "itemtype": "method",
            "name": "getElapsedTime",
            "return": {
                "description": "The elapsed time since last frame.",
                "type": "Number"
            },
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 32,
            "description": "Gets the total elapsed time since the begining.",
            "itemtype": "method",
            "name": "getTotalGameTime",
            "return": {
                "description": "The total elapsed time.",
                "type": "Number"
            },
            "class": "Atlantis.GameTime",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Game.js",
            "line": 81,
            "description": "Initialize the game logic and components.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.Game",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 11,
            "description": "An interface for game components",
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 27,
            "description": "Determine the activity of the state.",
            "itemtype": "method",
            "name": "isActive",
            "return": {
                "description": "Return true if the state is visible and enabled.",
                "type": "Boolean"
            },
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 36,
            "description": "Sets the activity of the state.",
            "itemtype": "method",
            "name": "setActive",
            "params": [
                {
                    "name": "Sets",
                    "description": "to true to active the state.",
                    "type": "Boolean"
                }
            ],
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 46,
            "description": "Initialize the logic of the component.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 52,
            "description": "Update the logic of the component.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                }
            ],
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 62,
            "description": "An interface for drawable game components.",
            "class": "Atlantis.GameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 78,
            "description": "Draw the component on screen.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "gameTime",
                    "description": "",
                    "type": "Atlantis.GameTime"
                },
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 89,
            "description": "A collection who'll initialize, load, update and draw components.",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 93,
            "description": "Create a collection of game components.",
            "is_constructor": 1,
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 102,
            "description": "Add a component to the collection",
            "itemtype": "method",
            "name": "add",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 115,
            "description": "Get a component from the collection",
            "itemtype": "method",
            "name": "get",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 129,
            "description": "Remove a component from the collection",
            "itemtype": "method",
            "name": "remove",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 146,
            "description": "Initialize logic.",
            "itemtype": "method",
            "name": "initialize",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 156,
            "description": "Load assets",
            "itemtype": "method",
            "name": "loadContent",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 166,
            "description": "Update all components",
            "itemtype": "method",
            "name": "update",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\GameComponent.js",
            "line": 178,
            "description": "Draw all components",
            "itemtype": "method",
            "name": "draw",
            "class": "Atlantis.DrawableGameComponent",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Helpers.js",
            "line": 18,
            "description": "Ajax method for POST and GET calls.",
            "itemtype": "method",
            "name": "ajax",
            "class": "Atlantis.Helpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Helpers.js",
            "line": 74,
            "description": "An event notifier. If the event doesn't exists it created and stored.",
            "itemtype": "method",
            "name": "notify",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the event to emit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "An object to emit with the event.",
                    "type": "Object"
                }
            ],
            "class": "Atlantis.Helpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Helpers.js",
            "line": 101,
            "description": "Gets the size of an image. This function add the image to the DOM an remove from it.\nAfter that we can gets the size of the image.",
            "itemtype": "method",
            "name": "getImageSize",
            "params": [
                {
                    "name": "image",
                    "description": "An instance of Image.",
                    "type": "Image"
                }
            ],
            "class": "Atlantis.Helpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 17,
            "description": "Gets PI value.",
            "itemtype": "attribute",
            "name": "Pi",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 25,
            "description": "Gets PI over 2 value.",
            "itemtype": "attribute",
            "name": "PiOver2",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 33,
            "description": "Gets PI over 4 value.",
            "itemtype": "attribute",
            "name": "PiOver4",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 41,
            "description": "Gets PI * 2 value.",
            "itemtype": "attribute",
            "name": "TwoPi",
            "readonly": "",
            "type": "{Number}",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 49,
            "itemtype": "method",
            "name": "clamp",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 59,
            "itemtype": "method",
            "name": "distance",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 67,
            "itemtype": "method",
            "name": "lerp",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 75,
            "itemtype": "method",
            "name": "toDegrees",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 83,
            "itemtype": "method",
            "name": "toRadians",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\MathHelper.js",
            "line": 91,
            "itemtype": "method",
            "name": "isPowerOfTwo",
            "class": "Atlantis.MathHelpers",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 34,
            "description": "Set all values of the matrix.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "values",
                    "description": "An array of 16 values who start at M11 and stop at M44",
                    "type": "Array"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 48,
            "description": "Gets identity value for push it into matrix.",
            "itemtype": "method",
            "name": "getIdentityValues",
            "static": 1,
            "return": {
                "description": "Return an array that correspond of identity matrix.",
                "type": "Array"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 64,
            "description": "Sets the matrix to identity.",
            "itemtype": "method",
            "name": "setIdentity",
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 72,
            "description": "Gets an identity matrix.",
            "itemtype": "method",
            "name": "getMatrixIdentity",
            "static": 1,
            "return": {
                "description": "Return an identity matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 84,
            "description": "Gets values of matrix in array. Start at M11 to M44.",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "An array of values.",
                "type": "Array"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 99,
            "description": "Sets the left of the matrix.",
            "itemtype": "method",
            "name": "setLeft",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to use.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 110,
            "description": "Gets the left of the matrix.",
            "itemtype": "method",
            "name": "getLeft",
            "return": {
                "description": "Return a the left vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 123,
            "description": "Sets the right of the matrix.",
            "itemtype": "method",
            "name": "setRight",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 134,
            "description": "Gets the right of the matrix.",
            "itemtype": "method",
            "name": "getRight",
            "return": {
                "description": "Return a the right vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 147,
            "description": "Sets the up of the matrix.",
            "itemtype": "method",
            "name": "setUp",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 158,
            "description": "Gets the up of the matrix.",
            "itemtype": "method",
            "name": "getUp",
            "return": {
                "description": "Return a the up vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 171,
            "description": "Sets the down of the matrix.",
            "itemtype": "method",
            "name": "setDown",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 182,
            "description": "Gets the down of the matrix.",
            "itemtype": "method",
            "name": "getDown",
            "return": {
                "description": "Return a the down vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 195,
            "description": "Sets the backward of the matrix.",
            "itemtype": "method",
            "name": "setBackward",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 206,
            "description": "Gets the backward of the matrix.",
            "itemtype": "method",
            "name": "getBackward",
            "return": {
                "description": "Return a the backward vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 219,
            "description": "Sets the forward of the matrix.",
            "itemtype": "method",
            "name": "setForward",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 230,
            "description": "Gets the forward of the matrix.",
            "itemtype": "method",
            "name": "getForward",
            "return": {
                "description": "Return a the forward vector of the matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 243,
            "description": "Sets translation.",
            "itemtype": "method",
            "name": "setTranslation",
            "params": [
                {
                    "name": "position",
                    "description": "The position to set.",
                    "type": "Atlantis.Vetor3"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 254,
            "description": "Add a matrix to this matrix.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix to add.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 269,
            "description": "Add two matrix.",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "matA",
                    "description": "A matrix",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matB",
                    "description": "Another matrix to add with the first",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "Return a new matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 283,
            "description": "Create a rotation matrix on X axis.",
            "itemtype": "method",
            "name": "createRotationX",
            "static": 1,
            "params": [
                {
                    "name": "rotation",
                    "description": "An angle in radians",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a rotation matrix on X axis.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 302,
            "description": "Create a rotation matrix on Y axis.",
            "itemtype": "method",
            "name": "createRotationY",
            "static": 1,
            "params": [
                {
                    "name": "rotation",
                    "description": "An angle in radians",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a rotation matrix on Y axis.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 321,
            "description": "Create a rotation matrix on Z axis.",
            "itemtype": "method",
            "name": "createRotationX",
            "static": 1,
            "params": [
                {
                    "name": "rotation",
                    "description": "An angle in radians",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a rotation matrix on Z axis.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 342,
            "description": "Create a scale matrix.",
            "itemtype": "method",
            "name": "createScale",
            "static": 1,
            "params": [
                {
                    "name": "sx",
                    "description": "Desired scale on X axis.",
                    "type": "Number"
                },
                {
                    "name": "sy",
                    "description": "Desired scale on Y axis.",
                    "type": "Number"
                },
                {
                    "name": "sz",
                    "description": "Desired scale on Z axis.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a scale matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 359,
            "description": "Create a translation matrix.",
            "itemtype": "method",
            "name": "createTranslation",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "Position on X axis."
                },
                {
                    "name": "y",
                    "description": "Position on Y axis."
                },
                {
                    "name": "z",
                    "description": "Position on Z axis."
                }
            ],
            "return": {
                "description": "Return a matrix translation."
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 376,
            "description": "Create a view matrix.",
            "metod": "createLookAt",
            "static": 1,
            "params": [
                {
                    "name": "position",
                    "description": "The position of the camera.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "Atlantis.Vector3}",
                    "description": "target The target of the camera."
                },
                {
                    "name": "Atlantis.Vector3}",
                    "description": "upVector Vector up"
                }
            ],
            "return": {
                "description": "Return a view camera.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 414,
            "description": "Create a perspective field of view matrix with Left hand notation.",
            "itemtype": "method",
            "name": "createPerspectiveFieldOfView",
            "static": 1,
            "params": [
                {
                    "name": "fov",
                    "description": "Desired field of view (Math.PI / 4 is a good value)",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "Desired aspect ratio (Screen width / height)",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "Near clip",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "Far clip",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a matrix of this type of perspective.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 433,
            "description": "Create a perspective field of view matrix with Right hand notation.",
            "itemtype": "method",
            "name": "createPerspectiveFieldOfViewRH",
            "static": 1,
            "params": [
                {
                    "name": "fov",
                    "description": "Desired field of view (Math.PI / 4 is a good value)",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "Desired aspect ratio (Screen width / height)",
                    "type": "Number"
                },
                {
                    "name": "near",
                    "description": "Near clip",
                    "type": "Number"
                },
                {
                    "name": "far",
                    "description": "Far clip",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a matrix of this type of perspective.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 452,
            "description": "Create a custom perspective matrix.",
            "itemtype": "method",
            "name": "createPerspectiveOffCenter",
            "static": 1,
            "params": [
                {
                    "name": "left",
                    "description": "Minimum X value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "right",
                    "description": "Maximum X value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "bottom",
                    "description": "Minimum Y value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "top",
                    "description": "Maximum Y value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "zNear",
                    "description": "Minimum Z value of the viewing volume.",
                    "type": "Number"
                },
                {
                    "name": "zFar",
                    "description": "Maximum Z value of the viewing volume.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a new custom perspective matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 477,
            "description": "Create a world matrix.",
            "itemtype": "method",
            "name": "createWorld",
            "static": 1,
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "forward",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "upVector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a world matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 504,
            "description": "Multiply this matrix by another matrix.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix to multiply.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 545,
            "description": "Multiply a two matrix.",
            "itemtype": "method",
            "name": "multiply",
            "static": 1,
            "params": [
                {
                    "name": "matrixA",
                    "description": "A matrix.",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matrixB",
                    "description": "Another matrix.",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matrixC",
                    "description": "Another matrix (optional).",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "Return a new matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 565,
            "description": "Subtract a matrix to this matrix.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "matrix",
                    "description": "A matrix to add.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Matrix.js",
            "line": 580,
            "description": "Subtract two matrix.",
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "matA",
                    "description": "A matrix.",
                    "type": "Atlantis.Matrix"
                },
                {
                    "name": "matB",
                    "description": "Another matrix to use to subtract with the first matrix.",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "Return a new matrix.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Matrix",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 11,
            "description": "A class that represent a point structure",
            "class": "Atlantis.Point",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 36,
            "description": "A class that represent a rectangle structure",
            "class": "Atlantis.Point",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 65,
            "description": "Determine if a Rectangle, Point or coordinates are contains in rectangle",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "X",
                    "description": "coordinate or an instance of Point or an instance of Rectangle.",
                    "type": "Number|Point|Rectangle"
                },
                {
                    "name": "Y",
                    "description": "coordinate.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 84,
            "itemtype": "method",
            "name": "contains",
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 96,
            "description": "gets the position.",
            "return": {
                "description": "The position."
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 104,
            "description": "Gets the position.",
            "return": {
                "description": "The position."
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 116,
            "description": "Gets the top value.",
            "itemtype": "method",
            "name": "getTop",
            "return": {
                "description": "Top coordinate (y)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 125,
            "description": "Gets the bottom value.",
            "itemtype": "method",
            "name": "getBottom",
            "return": {
                "description": "Bottom coordinate (y + height)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 134,
            "description": "Gets the left value.",
            "itemtype": "method",
            "name": "getLeft",
            "return": {
                "description": "Left coordinate (x)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 143,
            "description": "Gets the right value.",
            "itemtype": "method",
            "name": "getRight",
            "return": {
                "description": "Right value (x + width)",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 152,
            "description": "Gets the center of the rectangle.",
            "itemtype": "method",
            "name": "getCenter",
            "return": {
                "description": "A point of the center of the rectangle.",
                "type": "Atlantis.Point"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 162,
            "description": "Gets width",
            "return": {
                "description": "Return the with.",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 170,
            "description": "Gets height",
            "return": {
                "description": "Return the height",
                "type": "Number"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 178,
            "description": "Gets the top center.",
            "return": {
                "description": "The top center of the rectangle",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 186,
            "description": "Gets the bottom center.",
            "return": {
                "description": "The bottom center.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 194,
            "description": "Gets the left center.",
            "return": {
                "description": "The left center.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 202,
            "description": "Gets the right center.",
            "return": {
                "description": "The right center.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 210,
            "description": "Sets values to rectangle.",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 236,
            "description": "Sets the position of the rectangle",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number|Altantis.Vector2|Atlantis.Point"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Rectangle.js",
            "line": 252,
            "description": "Sets the size of the rectangle.",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Rectangle",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 11,
            "description": "A Vector2 class.",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 31,
            "description": "Add this vector by another vector or value.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to add to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 47,
            "description": "Add two vectors.",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 60,
            "description": "Substract this vector by another vector or value.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to subtract to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 76,
            "description": "Subtract two vectors.",
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 89,
            "description": "Divide this vector by another vector",
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to divide to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 105,
            "description": "Divide two vectors.",
            "itemtype": "method",
            "name": "divide",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 118,
            "description": "Multiply this vector by another vector or a value.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "value",
                    "description": "A vector or a value to multiply to this vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 134,
            "description": "Multiply two vectors.",
            "itemtype": "method",
            "name": "multiply",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 147,
            "description": "Gets distance between this vector and the vector passed in parameter.",
            "itemtype": "method",
            "name": "getDistance",
            "params": [
                {
                    "name": "vector2",
                    "description": "The vector2 to use to determine the distance.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "The distance between this vector and the vector passed in parameter.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 159,
            "description": "Gets the distance between two vectors.",
            "itemtype": "method",
            "name": "distance",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 171,
            "description": "Gets distance between this vector and the vector passed in parameter.",
            "itemtype": "method",
            "name": "getDistance",
            "params": [
                {
                    "name": "vector2",
                    "description": "The vector2 to use to determine the distance.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "The distance between this vector and the vector passed in parameter.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 183,
            "description": "Calculate the dot product of two vectors.",
            "itemtype": "method",
            "name": "dot",
            "static": 1,
            "params": [
                {
                    "name": "First",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Second",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "Return the dot product of the two vectors.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 195,
            "description": "Gets the length of the vector.",
            "return": {
                "description": "Return the length of the vector.",
                "type": "Number"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 203,
            "description": "Performs a linear interpolation between to vectors.",
            "itemtype": "method",
            "name": "lerp",
            "static": 1,
            "params": [
                {
                    "name": "First",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "Second",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                },
                {
                    "name": "amount",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 216,
            "description": "Gets a vector of the minimum of the two vectors.",
            "itemtype": "method",
            "name": "min",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": ""
                },
                {
                    "name": "vec2",
                    "description": ""
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the minimum of the two vectors."
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 231,
            "description": "Gets a vector of the maximum of the two vectors.",
            "itemtype": "method",
            "name": "max",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": ""
                },
                {
                    "name": "vec2",
                    "description": ""
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the maximum of the two vectors."
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 246,
            "description": "Negate this vector",
            "itemtype": "method",
            "name": "negate",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 261,
            "description": "Negate a vector.",
            "itemtype": "method",
            "name": "negate",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector to use.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "return": {
                "description": "Return the negated vector.",
                "type": "Atlantis.Vector2"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 275,
            "description": "Normalize this vector.",
            "itemtype": "method",
            "name": "normalize",
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 288,
            "itemtype": "method",
            "name": "normalize",
            "static": 1,
            "params": [
                {
                    "name": "A",
                    "description": "vector to normalize.",
                    "type": "Atlantis.Vector2"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 300,
            "description": "Gets a transformed Vector3 from a position and a matrix.",
            "itemtype": "method",
            "name": "transform",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "A tranformed vector.",
                "type": "Atlantis.Matrix"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 317,
            "description": "Gets a transformed Vector3 from a position and a matrix.",
            "itemtype": "method",
            "name": "transformCoordinate",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "matrix",
                    "description": "",
                    "type": "Atlantis.Matrix"
                }
            ],
            "return": {
                "description": "A tranformed vector.",
                "type": "Atlantis.Vector4"
            },
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector2.js",
            "line": 333,
            "description": "Sets the coordinates.",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "X",
                    "description": "value.",
                    "type": "Number"
                },
                {
                    "name": "Y",
                    "description": "value.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Vector2",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 77,
            "description": "Add a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to add.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 88,
            "description": "Add two vectors.",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a new Vector3",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 102,
            "description": "Subtract a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to Subtract.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 113,
            "description": "Subtract two vectors.",
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a news Vector3.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 127,
            "description": "divide a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "divide",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to divide.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 144,
            "description": "Divide two vectors.",
            "itemtype": "method",
            "name": "divide",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a new Vector3.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 158,
            "description": "multiply a Vector3 to the current vector.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "vector",
                    "description": "The Vector3 to multiply.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 169,
            "description": "Multiply a two vectors.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "A",
                    "description": "vector.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "Another",
                    "description": "vector.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a new vector.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 182,
            "description": "Calculates the cross products of two vectors.",
            "itemtype": "method",
            "name": "cross",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "Fist vector to use.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "Second vector to use.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "the cross products of the two vectors.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 198,
            "description": "Gets the distance between two vectors.",
            "itemtype": "method",
            "name": "distance",
            "static": 1,
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return the distance between two vectors.",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 209,
            "description": "Gets the distance squared between to vectors.",
            "itemtype": "method",
            "name": "distanceSquared",
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 223,
            "description": "Calculates the dot product of two vectors.",
            "itemtype": "method",
            "name": "dot",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "First vector to use.",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "Second vector to use.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return the dot product of two vectors.",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 235,
            "description": "Gets the length of the vector.",
            "itemtype": "method",
            "name": "length",
            "return": {
                "description": "Return the length of the vector.",
                "type": "Number"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 244,
            "description": "Linear interpolation between this vector and the vector passed in parameter.",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to use for interpolation",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vector.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 256,
            "description": "Linearly interpolates between two vectors.",
            "itemtype": "method",
            "name": "lerp",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "First vector",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "Second vector",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vec2."
                }
            ],
            "return": {
                "description": "Return a interpolated Vector3.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 272,
            "description": "Gets a vector of the minimum of the two vectors.",
            "itemtype": "method",
            "name": "min",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the minimum of the two vectors.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 288,
            "description": "Gets a vector of the maximum of the two vectors.",
            "itemtype": "method",
            "name": "max",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "",
                    "type": "Atlantis.Vector3"
                },
                {
                    "name": "vec2",
                    "description": "",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a vector that correspond of the maximum of the two vectors.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 304,
            "description": "Negate the vector.",
            "itemtype": "method",
            "name": "negate",
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector3.js",
            "line": 314,
            "description": "Negate a vector.",
            "itemtype": "method",
            "name": "negate",
            "static": 1,
            "params": [
                {
                    "name": "vector",
                    "description": "The vector to negate.",
                    "type": "Atlantis.Vector3"
                }
            ],
            "return": {
                "description": "Return a negated vector.",
                "type": "Atlantis.Vector3"
            },
            "class": "Atlantis.Vector3",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector4.js",
            "line": 36,
            "description": "Linear interpolation.",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "vector",
                    "description": "A vector to use for interpolation",
                    "type": "Atlantis.Vector4"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vector.",
                    "type": "Number"
                }
            ],
            "class": "Atlantis.Vector4",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        },
        {
            "file": "Framework\\Vector4.js",
            "line": 49,
            "description": "Linearly interpolates between two vectors.",
            "itemtype": "method",
            "name": "lerp",
            "static": 1,
            "params": [
                {
                    "name": "vec1",
                    "description": "First vector",
                    "type": "Atlantis.Vector4"
                },
                {
                    "name": "vec2",
                    "description": "Second vector",
                    "type": "Atlantis.Vector4"
                },
                {
                    "name": "amount",
                    "description": "Value between 0 and 1 indicating the weight of vec2.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Return a interpolated Vector3.",
                "type": "Atlantis.Vector4"
            },
            "class": "Atlantis.Vector4",
            "module": "Atlantis",
            "submodule": "Framework",
            "namespace": "Atlantis"
        }
    ],
    "warnings": [
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:27"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:67"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:67"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:67"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:67"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:87"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:87"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:87"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:133"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Animation.js:133"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:74"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:100"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:107"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:107"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:129"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:129"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:153"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Entity.js:153"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:50"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:50"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:65"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:65"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:65"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:77"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:86"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:118"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:168"
        },
        {
            "message": "param name/type/descript missing",
            "line": " Engine\\Graphics\\Sprite.js:168"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " Framework\\Input\\PointerManager.js:172"
        },
        {
            "message": "param name missing: {Atlantis.Matrix|Array}",
            "line": " Framework\\Matrix.js:12"
        },
        {
            "message": "unknown tag: metod",
            "line": " Framework\\Matrix.js:376"
        },
        {
            "message": "Missing item type\nAn interface for game components",
            "line": " Framework\\GameComponent.js:11"
        },
        {
            "message": "Missing item type\nAn interface for drawable game components.",
            "line": " Framework\\GameComponent.js:62"
        },
        {
            "message": "Missing item type\nA collection who'll initialize, load, update and draw components.",
            "line": " Framework\\GameComponent.js:89"
        },
        {
            "message": "Missing item type\nCreate a collection of game components.",
            "line": " Framework\\GameComponent.js:93"
        },
        {
            "message": "Missing item type\nCreate a view matrix.",
            "line": " Framework\\Matrix.js:376"
        },
        {
            "message": "Missing item type\nA class that represent a point structure",
            "line": " Framework\\Rectangle.js:11"
        },
        {
            "message": "Missing item type\nA class that represent a rectangle structure",
            "line": " Framework\\Rectangle.js:36"
        },
        {
            "message": "Missing item type\ngets the position.",
            "line": " Framework\\Rectangle.js:96"
        },
        {
            "message": "Missing item type\nGets the position.",
            "line": " Framework\\Rectangle.js:104"
        },
        {
            "message": "Missing item type\nGets width",
            "line": " Framework\\Rectangle.js:162"
        },
        {
            "message": "Missing item type\nGets height",
            "line": " Framework\\Rectangle.js:170"
        },
        {
            "message": "Missing item type\nGets the top center.",
            "line": " Framework\\Rectangle.js:178"
        },
        {
            "message": "Missing item type\nGets the bottom center.",
            "line": " Framework\\Rectangle.js:186"
        },
        {
            "message": "Missing item type\nGets the left center.",
            "line": " Framework\\Rectangle.js:194"
        },
        {
            "message": "Missing item type\nGets the right center.",
            "line": " Framework\\Rectangle.js:202"
        },
        {
            "message": "Missing item type\nSets values to rectangle.",
            "line": " Framework\\Rectangle.js:210"
        },
        {
            "message": "Missing item type\nSets the position of the rectangle",
            "line": " Framework\\Rectangle.js:236"
        },
        {
            "message": "Missing item type\nSets the size of the rectangle.",
            "line": " Framework\\Rectangle.js:252"
        },
        {
            "message": "Missing item type\nA Vector2 class.",
            "line": " Framework\\Vector2.js:11"
        },
        {
            "message": "Missing item type\nGets the length of the vector.",
            "line": " Framework\\Vector2.js:195"
        }
    ]
}